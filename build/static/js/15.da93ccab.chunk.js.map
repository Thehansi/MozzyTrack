{"version":3,"sources":["App/components/MainCard.js","store/constant.js","../node_modules/uuid/index.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v1.js","../node_modules/uuid/v4.js","Forms/UploadAttachmentTemplate/UploadNIC.jsx","Forms/UploadAttachmentTemplate/UploadStoreLocation.jsx","Forms/UploadAttachmentTemplate/UploadAttchment.jsx","Demo/Authentication/SignUp/SignUp1.js"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","backgroundColor","children","Component","v1","require","v4","uuid","module","exports","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","rnds","Array","r","i","Math","random","byteToHex","toString","substr","buf","offset","bth","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","ii","UploadNIC","OnNotification","message","type","notify","displayTime","at","onLoadPanelHiding","LoadPanelVisible","OnSaveValidation","FormLayout","validate","isValid","File","FileInfo","AutoID","OnClickEvent","e","FileData","FormData","append","FileName","Name","exec","name","axios","post","params","Folder","then","response","console","log","OnHide","data","filePath","catch","error","onCloseClick","FileSelect","target","files","onSchoolValueChanged","jlCategory","Category","filter","item","SchoolID","value","Status","ID","Option","FormRef","React","createRef","current","instance","Modal","size","show","Show","onHide","backdrop","keyboard","closeButton","Card","body","ref","formData","colCount","onChange","Navbar","bg","variant","Button","icon","shadingColor","onHiding","visible","showIndicator","shading","showPane","closeOnOutsideClick","UploadStoreLocation","UploadAttchment","AttachmentID","onUploadClickEvent","replaceAll","jFiles","uuidv4","SignUp1","onSelectedFilesChanged","Temp","ApplicationAttachment","forEach","element","TempFileName","push","AttcahmentName","FormLayout2","OnClearApplication","ApplicationID","Application","ApplicantNames","ApplicationStoreLocation","ApplicationProductSold","ApplicationTransportInfomation","AttachmentFilePath","AttachmentName","ApplicationRecomendationInformation","Area","componentDidMount","all","get","spread","req","OnClickRegistration","Swal","fire","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","res","serverRequest","JSON","stringify","dismiss","OnClickPrint","printContents","document","getElementById","innerHTML","originalContents","print","OnClickBackToLogin","open","onUploadNICClick","FilePath","Id","row","FileName_","Count","ListViewing","length","onUploadStoreLocationClick","onUploadUploadAttchmentClick","FormRef2","LeaseOrOwn","caption","dataField","editorOptions","maxLength","editorType","items","valueExpr","displayExpr","keyExpr","showBorders","wordWrapEnabled","allowSearch","selection","mode","hoverStateEnabled","dataSource","allowDeleting","allowAdding","allowUpdating","useIcons","defaultPageSize","buttons","showTitle","hint","disabled","ReportRef","jUploadData","InternshipLine"],"mappings":"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","file":"static/js/15.da93ccab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\n{\r\n  /* <Card className=\"customCard\"></Card>\r\n\r\n.customCard: {\r\n    background: blue !important;\r\n} */\r\n}\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader, cardColor;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body style={{ backgroundColor: \"rgb(185, 210, 214)\" }}>\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","const DEMO = {\r\n    BLANK_LINK: \"#!\",\r\n};\r\n\r\n\r\n\r\nexport default DEMO;","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import React, { Component, Fragment } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport FileUploader from \"devextreme-react/file-uploader\";\r\nimport { Button, Card, Navbar } from \"react-bootstrap\";\r\nimport Form, { Item, Label, RequiredRule } from \"devextreme-react/form\";\r\nimport axios from \"axios\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport uuid from \"uuid\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\n\r\nexport class UploadNIC extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            File: null,\r\n            FileName: null,\r\n\r\n            jlCategory: [],\r\n\r\n            LoadPanelVisible: false,\r\n        };\r\n\r\n        this.Status = [\r\n            { ID: 1, Name: \"Active\" },\r\n            { ID: 0, Name: \"Inactive\" },\r\n        ];\r\n\r\n        this.Option = [\r\n            { ID: 1, Name: \"Yes\" },\r\n            { ID: 0, Name: \"No\" },\r\n        ];\r\n\r\n        this.FormRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() { }\r\n\r\n    OnNotification = (message, type) => {\r\n        notify({\r\n            message: message,\r\n            type: type,\r\n            displayTime: 3000,\r\n            position: { at: \"top right\", offset: \"50\" },\r\n        });\r\n    };\r\n\r\n    onLoadPanelHiding = (message, type) => {\r\n        this.setState({\r\n            LoadPanelVisible: false,\r\n        });\r\n\r\n        this.OnNotification(message, type);\r\n    };\r\n\r\n    OnSaveValidation = () => {\r\n        if (!this.FormLayout.validate().isValid) {\r\n            this.OnNotification(\"Fields marked with * are required\", \"error\");\r\n            return false;\r\n        } else if (!this.state.File && !this.props.FileInfo.AutoID) {\r\n            this.OnNotification(\"File required\", \"error\");\r\n            return false;\r\n        } else return true;\r\n    };\r\n\r\n    OnClickEvent = (e) => {\r\n        if (this.OnSaveValidation()) {\r\n            if (this.state.File) {\r\n                this.setState({ LoadPanelVisible: true }, () => {\r\n                    let FileData = new FormData();\r\n                    FileData.append(\"file\", this.state.File);\r\n\r\n                    var ext = /(?:\\.([^.]+))?$/;\r\n                    let FileName = this.props.FileInfo.AutoID\r\n                        ? this.props.FileInfo.Name\r\n                        : uuid.v4() + \".\" + ext.exec(this.state.File.name)[1];\r\n\r\n                    axios\r\n                        .post(\"/api/upload/internship\", FileData, {\r\n                            params: {\r\n                                Folder: \"internship\",\r\n                                FileName: FileName,\r\n                            },\r\n                        })\r\n                        .then((response) => {\r\n                            this.setState({ File: null });\r\n                            console.log(\"response\", response)\r\n                            this.onLoadPanelHiding(\"Upload Successfully Saved\", \"success\");\r\n                            this.props.OnHide(0, FileName, response.data.filePath);\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                            this.onLoadPanelHiding(\"Something went wrong\", \"error\");\r\n                        });\r\n                });\r\n            } else if (this.props.FileInfo.AutoID) {\r\n\r\n                this.props.OnHide(1);\r\n            } else {\r\n                this.onLoadPanelHiding(\"File not found\", \"error\");\r\n                this.props.OnHide(0);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    onCloseClick = (e) => {\r\n        this.props.OnHide(0);\r\n    };\r\n\r\n    FileSelect = (e) => {\r\n        this.setState({ File: e.target.files[0] });\r\n    };\r\n\r\n    onSchoolValueChanged = (e) => {\r\n        this.setState({\r\n            jlCategory: this.props.Category.filter(\r\n                (item) => item.SchoolID === e.value\r\n            ),\r\n        });\r\n    };\r\n\r\n    get FormLayout() {\r\n        return this.FormRef.current.instance;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Modal\r\n                    size=\"xl\"\r\n                    show={this.props.Show}\r\n                    onHide={this.onCloseClick}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Attachment</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Card body>\r\n                            <Form\r\n                                ref={this.FormRef}\r\n                                formData={this.props.FileInfo}\r\n                                colCount={2}\r\n                            >\r\n\r\n\r\n                            </Form>\r\n                            <br></br>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"file\"\r\n                                    //accept=\".rpt\"\r\n                                    onChange={(e) => this.FileSelect(e)}\r\n                                />\r\n                            </div>\r\n                        </Card>\r\n\r\n                        <Navbar bg=\"light\" variant=\"light\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                icon=\"feather icon-layers\"\r\n                                onClick={this.OnClickEvent}\r\n                            >\r\n                                Upload\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                icon=\"feather icon-layers\"\r\n                                onClick={this.onCloseClick}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </Navbar>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <LoadPanel\r\n                    message=\"Processing.... Please, wait...\"\r\n                    shadingColor=\"rgba(0,0,0,0.4)\"\r\n                    onHiding={this.onLoadPanelHiding}\r\n                    visible={this.state.LoadPanelVisible}\r\n                    showIndicator={true}\r\n                    shading={true}\r\n                    showPane={true}\r\n                    closeOnOutsideClick={false}\r\n                    width={500}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadNIC;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport FileUploader from \"devextreme-react/file-uploader\";\r\nimport { Button, Card, Navbar } from \"react-bootstrap\";\r\nimport Form, { Item, Label, RequiredRule } from \"devextreme-react/form\";\r\nimport axios from \"axios\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport uuid from \"uuid\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\n\r\nexport class UploadStoreLocation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            File: null,\r\n            FileName: null,\r\n\r\n            jlCategory: [],\r\n\r\n            LoadPanelVisible: false,\r\n        };\r\n\r\n        this.Status = [\r\n            { ID: 1, Name: \"Active\" },\r\n            { ID: 0, Name: \"Inactive\" },\r\n        ];\r\n\r\n        this.Option = [\r\n            { ID: 1, Name: \"Yes\" },\r\n            { ID: 0, Name: \"No\" },\r\n        ];\r\n\r\n        this.FormRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() { }\r\n\r\n    OnNotification = (message, type) => {\r\n        notify({\r\n            message: message,\r\n            type: type,\r\n            displayTime: 3000,\r\n            position: { at: \"top right\", offset: \"50\" },\r\n        });\r\n    };\r\n\r\n    onLoadPanelHiding = (message, type) => {\r\n        this.setState({\r\n            LoadPanelVisible: false,\r\n        });\r\n\r\n        this.OnNotification(message, type);\r\n    };\r\n\r\n    OnSaveValidation = () => {\r\n        if (!this.FormLayout.validate().isValid) {\r\n            this.OnNotification(\"Fields marked with * are required\", \"error\");\r\n            return false;\r\n        } else if (!this.state.File && !this.props.FileInfo.AutoID) {\r\n            this.OnNotification(\"File required\", \"error\");\r\n            return false;\r\n        } else return true;\r\n    };\r\n\r\n    OnClickEvent = (e) => {\r\n        if (this.OnSaveValidation()) {\r\n            if (this.state.File) {\r\n                this.setState({ LoadPanelVisible: true }, () => {\r\n                    let FileData = new FormData();\r\n                    FileData.append(\"file\", this.state.File);\r\n\r\n                    var ext = /(?:\\.([^.]+))?$/;\r\n                    let FileName = this.props.FileInfo.AutoID\r\n                        ? this.props.FileInfo.Name\r\n                        : uuid.v4() + \".\" + ext.exec(this.state.File.name)[1];\r\n\r\n                    axios\r\n                        .post(\"/api/upload/internship\", FileData, {\r\n                            params: {\r\n                                Folder: \"internship\",\r\n                                FileName: FileName,\r\n                            },\r\n                        })\r\n                        .then((response) => {\r\n                            this.setState({ File: null });\r\n                            console.log(\"response\", response)\r\n                            this.onLoadPanelHiding(\"Upload Successfully Saved\", \"success\");\r\n                            this.props.OnHide(0, FileName, response.data.filePath);\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                            this.onLoadPanelHiding(\"Something went wrong\", \"error\");\r\n                        });\r\n                });\r\n            } else if (this.props.FileInfo.AutoID) {\r\n\r\n                this.props.OnHide(1);\r\n            } else {\r\n                this.onLoadPanelHiding(\"File not found\", \"error\");\r\n                this.props.OnHide(0);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    onCloseClick = (e) => {\r\n        this.props.OnHide(0);\r\n    };\r\n\r\n    FileSelect = (e) => {\r\n        this.setState({ File: e.target.files[0] });\r\n    };\r\n\r\n    onSchoolValueChanged = (e) => {\r\n        this.setState({\r\n            jlCategory: this.props.Category.filter(\r\n                (item) => item.SchoolID === e.value\r\n            ),\r\n        });\r\n    };\r\n\r\n    get FormLayout() {\r\n        return this.FormRef.current.instance;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Modal\r\n                    size=\"xl\"\r\n                    show={this.props.Show}\r\n                    onHide={this.onCloseClick}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Attachment</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Card body>\r\n                            <Form\r\n                                ref={this.FormRef}\r\n                                formData={this.props.FileInfo}\r\n                                colCount={2}\r\n                            >\r\n\r\n\r\n                            </Form>\r\n                            <br></br>\r\n\r\n                            <div>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"file\"\r\n                                    //accept=\".rpt\"\r\n                                    onChange={(e) => this.FileSelect(e)}\r\n                                />\r\n                            </div>\r\n                        </Card>\r\n\r\n                        <Navbar bg=\"light\" variant=\"light\">\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                icon=\"feather icon-layers\"\r\n                                onClick={this.OnClickEvent}\r\n                            >\r\n                                Upload\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                icon=\"feather icon-layers\"\r\n                                onClick={this.onCloseClick}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </Navbar>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <LoadPanel\r\n                    message=\"Processing.... Please, wait...\"\r\n                    shadingColor=\"rgba(0,0,0,0.4)\"\r\n                    onHiding={this.onLoadPanelHiding}\r\n                    visible={this.state.LoadPanelVisible}\r\n                    showIndicator={true}\r\n                    shading={true}\r\n                    showPane={true}\r\n                    closeOnOutsideClick={false}\r\n                    width={500}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadStoreLocation;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport FileUploader from \"devextreme-react/file-uploader\";\r\nimport { Button, Card, Navbar } from \"react-bootstrap\";\r\nimport Form, { Item, Label, RequiredRule } from \"devextreme-react/form\";\r\nimport axios from \"axios\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport uuid from \"uuid\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\n\r\nexport class UploadAttchment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      File: null,\r\n      FileName: null,\r\n\r\n      jlCategory: [],\r\n\r\n      LoadPanelVisible: false,\r\n      jFiles: {},\r\n    };\r\n\r\n    this.Status = [\r\n      { ID: 1, Name: \"Active\" },\r\n      { ID: 0, Name: \"Inactive\" },\r\n    ];\r\n\r\n    this.Option = [\r\n      { ID: 1, Name: \"Yes\" },\r\n      { ID: 0, Name: \"No\" },\r\n    ];\r\n\r\n    this.FormRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  onLoadPanelHiding = (message, type) => {\r\n    this.setState({\r\n      LoadPanelVisible: false,\r\n    });\r\n\r\n    this.OnNotification(message, type);\r\n  };\r\n\r\n  OnSaveValidation = () => {\r\n    if (!this.FormLayout.validate().isValid) {\r\n      this.OnNotification(\"Fields marked with * are required\", \"error\");\r\n      return false;\r\n    } else if (!this.state.File && !this.props.FileInfo.AttachmentID) {\r\n      this.OnNotification(\"File required\", \"error\");\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  onUploadClickEvent = (e) => {\r\n    //  console.log(\"this.props.FileInfo.AttachmentID\", this.props.FileInfo.AttachmentID);\r\n    if (this.OnSaveValidation()) {\r\n      if (this.state.File) {\r\n        this.setState({ LoadPanelVisible: true }, () => {\r\n          let FileData = new FormData();\r\n          FileData.append(\"file\", this.state.File);\r\n\r\n          var ext = /(?:\\.([^.]+))?$/;\r\n          let FileName = (\r\n            \"PR\" +\r\n            \"_\" +\r\n            uuid.v4() +\r\n            \".\" +\r\n            ext.exec(this.state.File.name)[1]\r\n          ).replaceAll(/\\s/g, \"\");\r\n          // debugger;\r\n          axios\r\n            .post(\"/api/upload/attachment\", FileData, {\r\n              params: {\r\n                Folder: \"PR\",\r\n                FileName: FileName,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              this.setState({ File: null });\r\n              console.log(\"response\", response);\r\n              //  console.log(\"response\", this.props.AttachmentID);\r\n              let filePath = response.data.filePath;\r\n              //  let filePath = response.data.filePath;\r\n              //this.onLoadPanelHiding(\"upload successfully saved\", \"success\");\r\n              this.props.OnHide(FileName, filePath);\r\n              //console.log(\"FileName\", FileName);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              this.onLoadPanelHiding(\"Something went wrong\", \"error\");\r\n            });\r\n        });\r\n      } else if (this.props.AttachmentID) {\r\n        this.props.OnHide(1);\r\n      } else {\r\n        this.onLoadPanelHiding(\"File not found\", \"error\");\r\n        this.props.OnHide(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  onCloseClick = (e) => {\r\n    this.props.OnHide(0);\r\n  };\r\n\r\n  FileSelect = (e) => {\r\n    this.setState({ File: e.target.files[0] });\r\n  };\r\n\r\n  get FormLayout() {\r\n    return this.FormRef.current.instance;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          size=\"xl\"\r\n          show={this.props.Show}\r\n          onHide={this.onCloseClick}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Attachment</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Card body>\r\n              <Form\r\n                ref={this.FormRef}\r\n                formData={this.state.jFiles}\r\n                colCount={2}\r\n              ></Form>\r\n              <br></br>\r\n\r\n              <div>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  //accept=\".rpt\"\r\n                  onChange={(e) => this.FileSelect(e)}\r\n                />\r\n              </div>\r\n            </Card>\r\n\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n              <Button\r\n                variant=\"dark\"\r\n                icon=\"feather icon-layers\"\r\n                onClick={this.onUploadClickEvent}\r\n              >\r\n                Upload\r\n              </Button>\r\n              <Button\r\n                variant=\"dark\"\r\n                icon=\"feather icon-layers\"\r\n                onClick={this.onCloseClick}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Navbar>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        {/* <LoadPanel\r\n          message=\"Processing.... Please, wait...\"\r\n          shadingColor=\"rgba(0,0,0,0.4)\"\r\n          onHiding={this.onLoadPanelHiding}\r\n          visible={this.state.LoadPanelVisible}\r\n          showIndicator={true}\r\n          shading={true}\r\n          showPane={true}\r\n          closeOnOutsideClick={false}\r\n          width={500}\r\n        /> */}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadAttchment;\r\n","import React from \"react\";\r\nimport \"./../../../assets/scss/style.scss\";\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport Form, {\r\n  Item,\r\n  GroupItem,\r\n  RequiredRule,\r\n  Label,\r\n  EmptyItem,\r\n} from \"devextreme-react/form\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging,\r\n  Editing,\r\n  Popup,\r\n  Form as GForm,\r\n  Lookup,\r\n} from \"devextreme-react/data-grid\";\r\nimport UploadNIC from \"../../../Forms/UploadAttachmentTemplate/UploadNIC\";\r\nimport UploadStoreLocation from \"../../../Forms/UploadAttachmentTemplate/UploadStoreLocation\";\r\nimport UploadAttchment from \"../../../Forms/UploadAttachmentTemplate/UploadAttchment\";\r\nimport FileUploader from \"devextreme-react/file-uploader\";\r\nimport { LoadPanel } from \"devextreme-react\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nvar { v4: uuidv4 } = require(\"uuid\");\r\n\r\nclass SignUp1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ApplicationID: 0,\r\n      Application: {},\r\n      ApplicantNames: [],\r\n\r\n      ApplicationStoreLocation: [],\r\n      ApplicationProductSold: [],\r\n      ApplicationTransportInfomation: [],\r\n      ApplicationAttachment: [\r\n        {\r\n          AttachmentID: 1,\r\n          Name: \"Access To Location Attachment\",\r\n          AttachmentFilePath: \"\",\r\n          AttachmentName: \"\",\r\n        },\r\n        {\r\n          AttachmentID: 2,\r\n          Name: \"Business Registration Attachment\",\r\n          AttachmentFilePath: \"\",\r\n          AttachmentName: \"\",\r\n        },\r\n        {\r\n          AttachmentID: 3,\r\n          Name: \"Office Facility Attachment\",\r\n          AttachmentFilePath: \"\",\r\n          AttachmentName: \"\",\r\n        },\r\n        {\r\n          AttachmentID: 4,\r\n          Name: \"Main Applicant Signature\",\r\n          AttachmentFilePath: \"\",\r\n          AttachmentName: \"\",\r\n        },\r\n        {\r\n          AttachmentID: 5,\r\n          Name: \"Applicant NIC\",\r\n          AttachmentFilePath: \"\",\r\n          AttachmentName: \"\",\r\n        },\r\n      ],\r\n      ApplicationRecomendationInformation: [],\r\n\r\n      LoadPanelVisible: false,\r\n\r\n      UploadNIC: false,\r\n      UploadStoreLocation: false,\r\n      UploadAttchment: false,\r\n      FileInfo: {},\r\n      Area: [],\r\n    };\r\n    this.FormRef = React.createRef();\r\n    this.FormRef2 = React.createRef();\r\n\r\n    this.LeaseOrOwn = [\r\n      { ID: 1, Name: \"Lease\" },\r\n      { ID: 2, Name: \"Own\" },\r\n    ];\r\n  }\r\n\r\n  get FormLayout() {\r\n    return this.FormRef.current.instance;\r\n  }\r\n  get FormLayout2() {\r\n    return this.FormRef2.current.instance;\r\n  }\r\n\r\n  onSelectedFilesChanged = (e) => {\r\n    let Temp = this.state.ApplicationAttachment;\r\n    console.log(\"Temp 01\", Temp);\r\n    e.value.forEach(\r\n      (element) => {\r\n        console.log(\"element 02\", element);\r\n\r\n        let TempFileName = uuidv4() + \"_\" + element.name;\r\n\r\n        console.log(\"TempFileName\", TempFileName);\r\n\r\n        Temp.push({\r\n          AttcahmentName: TempFileName,\r\n        });\r\n\r\n        // axios\r\n        //     .post(\"/api/application-attachment-upload\", element, {\r\n        //         params: {\r\n        //             Folder: \"layout\",\r\n        //             FileName: TempFileName,\r\n        //         }\r\n        //     },\r\n        //     )\r\n        //     .then((response) => {\r\n\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.log(error);\r\n        //     });\r\n      },\r\n      () => {\r\n        this.setState({\r\n          ApplicationAttachment: Temp,\r\n        });\r\n      }\r\n    );\r\n\r\n    console.log(\"e\", e);\r\n  };\r\n\r\n  onLoadPanelHiding = (message, type) => {\r\n    this.setState({\r\n      LoadPanelVisible: false,\r\n    });\r\n\r\n    this.OnNotification(message, type);\r\n  };\r\n\r\n  OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  OnSaveValidation = () => {\r\n    if (\r\n      !this.FormLayout.validate().isValid &&\r\n      !this.FormLayout2.validate().isValid\r\n    ) {\r\n      this.OnNotification(\"Fields marked with * are required\", \"error\");\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  OnClearApplication = (e) => {\r\n    this.setState(\r\n      {\r\n        ApplicationID: 0,\r\n        Application: {},\r\n        ApplicantNames: [],\r\n\r\n        ApplicationStoreLocation: [],\r\n        ApplicationProductSold: [],\r\n        ApplicationTransportInfomation: [],\r\n        ApplicationAttachment: [\r\n          {\r\n            AttachmentID: 1,\r\n            Name: \"Access To Location Attachment\",\r\n            AttachmentFilePath: \"\",\r\n            AttachmentName: \"\",\r\n          },\r\n          {\r\n            AttachmentID: 2,\r\n            Name: \"Business Registration Attachment\",\r\n            AttachmentFilePath: \"\",\r\n            AttachmentName: \"\",\r\n          },\r\n          {\r\n            AttachmentID: 3,\r\n            Name: \"Office Facility Attachment\",\r\n            AttachmentFilePath: \"\",\r\n            AttachmentName: \"\",\r\n          },\r\n          {\r\n            AttachmentID: 4,\r\n            Name: \"Main Applicant Signature\",\r\n            AttachmentFilePath: \"\",\r\n            AttachmentName: \"\",\r\n          },\r\n          {\r\n            AttachmentID: 5,\r\n            Name: \"Applicant NIC\",\r\n            AttachmentFilePath: \"\",\r\n            AttachmentName: \"\",\r\n          },\r\n        ],\r\n        ApplicationRecomendationInformation: [],\r\n\r\n        LoadPanelVisible: false,\r\n\r\n        UploadNIC: false,\r\n        UploadStoreLocation: false,\r\n        UploadAttchment: false,\r\n        FileInfo: {},\r\n        Area: [],\r\n      },\r\n      () => {\r\n        this.componentDidMount();\r\n      }\r\n    );\r\n  };\r\n\r\n  // NOTE When page load bind the initial data\r\n  componentDidMount = () => {\r\n    this.setState({ LoadPanelVisible: true }, () => {\r\n      axios\r\n        .all([axios.get(\"/api/area-lookup\")])\r\n        .then(\r\n          axios.spread((req) => {\r\n            console.log(\"res area l168\", req);\r\n            this.setState(\r\n              (prevState) => ({\r\n                Area: req.data,\r\n              }),\r\n              () => this.setState({ LoadPanelVisible: false })\r\n            );\r\n          })\r\n        )\r\n        .catch((error) => console.log(error));\r\n    });\r\n  };\r\n\r\n  /* NOTE This function call to save the application data */\r\n\r\n  OnClickRegistration = (e) => {\r\n    if (this.OnSaveValidation()) {\r\n      Swal.fire({\r\n        type: \"info\",\r\n        showCancelButton: true,\r\n        text: \"Do you want to save ?\",\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n      }).then((res) => {\r\n        if (res.value) {\r\n          this.setState({ LoadPanelVisible: true });\r\n          this.serverRequest = axios\r\n            .post(\"/api/application\", {\r\n              ApplicationID: this.state.ApplicationID,\r\n              Application: JSON.stringify(this.state.Application),\r\n              ApplicantNames: JSON.stringify(this.state.ApplicantNames),\r\n              ApplicationStoreLocation: JSON.stringify(\r\n                this.state.ApplicationStoreLocation\r\n              ),\r\n              ApplicationProductSold: JSON.stringify(\r\n                this.state.ApplicationProductSold\r\n              ),\r\n              ApplicationTransportInfomation: JSON.stringify(\r\n                this.state.ApplicationTransportInfomation\r\n              ),\r\n              ApplicationRecomendationInformation: JSON.stringify(\r\n                this.state.ApplicationRecomendationInformation\r\n              ),\r\n              ApplicationAttachment: JSON.stringify(\r\n                this.state.ApplicationAttachment\r\n              ),\r\n            })\r\n            .then((response) => {\r\n              this.onLoadPanelHiding(\"Successfully Saved\", \"success\");\r\n              //  this.OnClearApplication();\r\n              this.setState({\r\n                ApplicationID: response.data[0].ApplicationID,\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        } else if (res.dismiss == \"cancel\") {\r\n        } else if (res.dismiss == \"esc\") {\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  OnClickPrint = (e) => {\r\n    console.log(\"print\");\r\n    let printContents = document.getElementById(\"card-sign-in\").innerHTML;\r\n    let originalContents = document.body.innerHTML;\r\n    document.body.innerHTML = printContents;\r\n    window.print();\r\n    document.body.innerHTML = originalContents;\r\n  };\r\n\r\n  OnClickBackToLogin = (e) => {\r\n    window.open(`/`, \"_self\");\r\n  };\r\n  onUploadNICClick = (e, FileName, FilePath) => {\r\n    let Id = 0;\r\n    this.setState({ UploadNIC: !this.state.UploadNIC }, () => {\r\n      if (this.state.UploadNIC) {\r\n        Id = e.row.data.AutoID;\r\n      }\r\n      let FileName_ = FileName + \"\";\r\n      let Count = 0;\r\n      if (!this.state.ListViewing) {\r\n        console.log(FileName_);\r\n        for (var i = 0; i < this.state.ApplicantNames.length; i++) {\r\n          if (this.state.ApplicantNames[i].AutoID == Id) {\r\n            Count = i;\r\n          }\r\n        }\r\n\r\n        this.state.ApplicantNames[Count].AttachmentFilePath = FilePath + \"\";\r\n        this.state.ApplicantNames[Count].AttachmentName = FileName_;\r\n        this.setState((prevState) => ({\r\n          ApplicantNames: this.state.ApplicantNames,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  onUploadStoreLocationClick = (e, FileName, FilePath) => {\r\n    let Id = 0;\r\n    this.setState(\r\n      { UploadStoreLocation: !this.state.UploadStoreLocation },\r\n      () => {\r\n        if (this.state.UploadStoreLocation) {\r\n          Id = e.row.data.AutoID;\r\n        }\r\n        let FileName_ = FileName + \"\";\r\n        let Count = 0;\r\n        if (!this.state.ListViewing) {\r\n          console.log(FileName_);\r\n          for (var i = 0; i < this.state.ApplicationStoreLocation.length; i++) {\r\n            if (this.state.ApplicationStoreLocation[i].AutoID == Id) {\r\n              Count = i;\r\n            }\r\n          }\r\n\r\n          this.state.ApplicationStoreLocation[Count].AttachmentFilePath =\r\n            FilePath + \"\";\r\n          this.state.ApplicationStoreLocation[Count].AttachmentName = FileName_;\r\n          this.setState((prevState) => ({\r\n            ApplicationStoreLocation: this.state.ApplicationStoreLocation,\r\n          }));\r\n        }\r\n      }\r\n    );\r\n  };\r\n  onUploadUploadAttchmentClick = (e, FileName, FilePath, AttachmentID) => {\r\n    let Id = 0;\r\n\r\n    this.setState({ UploadAttchment: !this.state.UploadAttchment }, () => {\r\n      if (this.state.UploadAttchment) {\r\n        Id = e.row.data.AttachmentID;\r\n\r\n        this.setState({\r\n          FileInfo: e.row.data,\r\n        });\r\n      }\r\n      let FileName_ = FileName + \"\";\r\n      let Count = 0;\r\n      if (!this.state.ListViewing) {\r\n        console.log(FileName_);\r\n        for (var i = 0; i < this.state.ApplicationAttachment.length; i++) {\r\n          if (\r\n            this.state.ApplicationAttachment[i].AttachmentID == AttachmentID\r\n          ) {\r\n            Count = i;\r\n          }\r\n        }\r\n\r\n        this.state.ApplicationAttachment[Count].AttachmentFilePath =\r\n          FilePath + \"\";\r\n        this.state.ApplicationAttachment[Count].AttachmentName = FileName_;\r\n        this.setState((prevState) => ({\r\n          ApplicationAttachment: this.state.ApplicationAttachment,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <div className=\"card-sign-in\">\r\n          <Card title=\"Submit You Application\">\r\n            <Form ref={this.FormRef} formData={this.state.Application}>\r\n              <GroupItem caption=\"Applicant Information\" colCount={2}>\r\n                <Item\r\n                  dataField=\"FullName\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n                <Item\r\n                  dataField=\"Email\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n                <Item\r\n                  dataField=\"NIC\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n              </GroupItem>\r\n              <GroupItem caption=\"Communication Information\" colCount={2}>\r\n                <Item\r\n                  dataField=\"TelephoneNo1\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <Label text=\"Telephone No 1\"></Label>\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n                <Item\r\n                  dataField=\"TelephoneNo2\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <Label text=\"Telephone No 2\"></Label>\r\n                </Item>\r\n                <Item\r\n                  dataField=\"FaxNo\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                ></Item>\r\n                <Item\r\n                  dataField=\"CommunicationEmail\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n              </GroupItem>\r\n              <GroupItem caption=\"Business Information\" colCount={2}>\r\n                <Item\r\n                  dataField=\"PSA\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n\r\n                <Item\r\n                  dataField=\"AreaID\"\r\n                  editorType=\"dxSelectBox\"\r\n                  editorOptions={{\r\n                    items: this.state.Area,\r\n                    valueExpr: \"AreaID\",\r\n                    displayExpr: \"Name\",\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                  <Label text=\"Area\" />\r\n                </Item>\r\n\r\n                <Item\r\n                  dataField=\"BusinessName\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                  <Label text=\"Name of the Business\" />\r\n                </Item>\r\n                <Item\r\n                  dataField=\"RegisteredAddress\"\r\n                  editorType=\"dxTextArea\"\r\n                  editorOptions={{\r\n                    maxLength: 250,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n\r\n                <Item\r\n                  dataField=\"AddressForCorrespondence\"\r\n                  editorType=\"dxTextArea\"\r\n                  editorOptions={{\r\n                    maxLength: 250,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n\r\n                <Item\r\n                  dataField=\"NatureOfBusiness\"\r\n                  editorType=\"dxTextArea\"\r\n                  editorOptions={{\r\n                    maxLength: 250,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n\r\n                <Item\r\n                  dataField=\"AccessToLocation\"\r\n                  editorType=\"dxTextArea\"\r\n                  editorOptions={{\r\n                    maxLength: 250,\r\n                  }}\r\n                ></Item>\r\n\r\n                <Item\r\n                  dataField=\"SolePropritorship\"\r\n                  editorType=\"dxCheckBox\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                ></Item>\r\n\r\n                <Item\r\n                  dataField=\"Partnership\"\r\n                  editorType=\"dxCheckBox\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                ></Item>\r\n\r\n                <Item\r\n                  dataField=\"LimitedLiabilityCompany\"\r\n                  editorType=\"dxCheckBox\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                ></Item>\r\n                <Item\r\n                  dataField=\"OfficeFacility\"\r\n                  editorType=\"dxCheckBox\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                ></Item>\r\n                <Item\r\n                  dataField=\"BusinessRegistrationNo\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                  <Label text=\"Business Registration No\" />\r\n                </Item>\r\n              </GroupItem>\r\n            </Form>\r\n            <Form>\r\n              <GroupItem\r\n                caption=\"Names of Proprietor/Partner/Direcotrs\"\r\n                colCount={2}\r\n              ></GroupItem>\r\n            </Form>\r\n            <br />\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              keyExpr=\"ApplicantNameID\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              dataSource={this.state.ApplicantNames}\r\n            >\r\n              <Editing\r\n                mode=\"popup\"\r\n                allowDeleting={true}\r\n                allowAdding={true}\r\n                allowUpdating={true}\r\n                useIcons={true}\r\n              ></Editing>\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"Name\" />\r\n              <Column dataField=\"Address\" />\r\n              <Column dataField=\"NIC\" />\r\n\r\n              <Column type=\"buttons\" buttons={[\"edit\", \"delete\"]} />\r\n            </DataGrid>\r\n            <br />\r\n            <Form ref={this.FormRef2} formData={this.state.Application}>\r\n              <GroupItem caption=\"Bank Information\" colCount={2}>\r\n                <Item\r\n                  dataField=\"NameOfBankAndBranch\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n\r\n                <Item\r\n                  dataField=\"AccountNo\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n                <Item\r\n                  dataField=\"CashDeposit\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n                <EmptyItem />\r\n                <Item\r\n                  dataField=\"BankGuarantee\"\r\n                  editorOptions={{\r\n                    maxLength: 50,\r\n                  }}\r\n                >\r\n                  <RequiredRule message=\"Field is required to fill\" />\r\n                </Item>\r\n              </GroupItem>\r\n            </Form>\r\n            <Form>\r\n              <GroupItem\r\n                caption=\"Store Location Information\"\r\n                colCount={2}\r\n              ></GroupItem>\r\n            </Form>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              keyExpr=\"StoreLocationID\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              dataSource={this.state.ApplicationStoreLocation}\r\n            >\r\n              <Editing\r\n                mode=\"popup\"\r\n                allowDeleting={true}\r\n                allowAdding={true}\r\n                allowUpdating={true}\r\n                useIcons={true}\r\n              ></Editing>\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"StoreLocation\" />\r\n              <Column dataField=\"StoreCapacity\" />\r\n              <Column type=\"buttons\" buttons={[\"edit\", \"delete\"]} />\r\n            </DataGrid>\r\n            <br />\r\n            <Form>\r\n              <GroupItem\r\n                caption=\"Products Sold Information\"\r\n                colCount={2}\r\n              ></GroupItem>\r\n            </Form>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              keyExpr=\"ProductionSoldInformationID\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              dataSource={this.state.ApplicationProductSold}\r\n            >\r\n              <Editing\r\n                mode=\"popup\"\r\n                allowDeleting={true}\r\n                allowAdding={true}\r\n                allowUpdating={true}\r\n                useIcons={true}\r\n              >\r\n                <Popup\r\n                  title=\"Add Your Competitor Products Sold Information\"\r\n                  showTitle={true}\r\n                ></Popup>\r\n              </Editing>\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"CompetitorName\" />\r\n              <Column dataField=\"ProductsSold\" />\r\n              <Column dataField=\"Remark\" />\r\n            </DataGrid>\r\n            <br />\r\n            <Form>\r\n              <GroupItem\r\n                caption=\"Transport Information\"\r\n                colCount={2}\r\n              ></GroupItem>\r\n            </Form>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              keyExpr=\"ApplicationTransportID\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              dataSource={this.state.ApplicationTransportInfomation}\r\n            >\r\n              <Editing\r\n                mode=\"popup\"\r\n                allowDeleting={true}\r\n                allowAdding={true}\r\n                allowUpdating={true}\r\n                useIcons={true}\r\n              >\r\n                <Popup\r\n                  title=\"Add Your Transport Infomation\"\r\n                  showTitle={true}\r\n                ></Popup>\r\n              </Editing>\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"TypeOfVehicle\" />\r\n              <Column dataField=\"RegNo\" />\r\n              <Column dataField=\"Capacity\" />\r\n              <Column dataField=\"LeaseOrOwn\" caption=\"Lease/Own\">\r\n                <Lookup\r\n                  dataSource={this.LeaseOrOwn}\r\n                  displayExpr=\"Name\"\r\n                  valueExpr=\"ID\"\r\n                />\r\n              </Column>\r\n            </DataGrid>\r\n            <br />\r\n            <Form>\r\n              <GroupItem caption=\"Attachment\" colCount={2}></GroupItem>\r\n            </Form>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              keyExpr=\"AttachmentID\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              dataSource={this.state.ApplicationAttachment}\r\n            >\r\n              <Editing\r\n                mode=\"popup\"\r\n                allowDeleting={true}\r\n                allowAdding={true}\r\n                allowUpdating={true}\r\n                useIcons={true}\r\n              >\r\n                <Popup\r\n                  title=\"Add Your Attachment Infomation\"\r\n                  showTitle={true}\r\n                ></Popup>\r\n              </Editing>\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"Name\" />\r\n              <Column\r\n                type=\"buttons\"\r\n                buttons={[\r\n                  \"edit\",\r\n                  {\r\n                    hint: \"Upload\",\r\n                    icon: \"upload\",\r\n                    visible: true,\r\n                    onClick: this.onUploadUploadAttchmentClick,\r\n                  },\r\n                  {\r\n                    hint: \"View\",\r\n                    icon: \"download\",\r\n                  },\r\n                  \"delete\",\r\n                ]}\r\n              />\r\n            </DataGrid>\r\n\r\n            <br />\r\n            <hr />\r\n\r\n            <button\r\n              className=\"btn btn-primary shadow-2 mb-4\"\r\n              onClick={this.OnClickRegistration}\r\n              disabled={this.state.ApplicationID != 0}\r\n            >\r\n              Registration\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary shadow-2 mb-4\"\r\n              onClick={this.OnClickBackToLogin}\r\n            >\r\n              Back To Login\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-primary shadow-2 mb-4\"\r\n              onClick={this.OnClickPrint}\r\n              disabled={this.state.ApplicationID > 0}\r\n            >\r\n              Print Application\r\n            </button>\r\n          </Card>\r\n        </div>\r\n\r\n        <LoadPanel\r\n          message=\"Processing.... Please, wait...\"\r\n          shadingColor=\"rgba(0,0,0,0.4)\"\r\n          onHiding={this.onLoadPanelHiding}\r\n          visible={this.state.LoadPanelVisible}\r\n          showIndicator={true}\r\n          shading={true}\r\n          showPane={true}\r\n          closeOnOutsideClick={false}\r\n          width={500}\r\n        />\r\n\r\n        <UploadNIC\r\n          ref={this.ReportRef}\r\n          Show={this.state.UploadNIC}\r\n          OnHide={this.onUploadNICClick}\r\n          FileInfo={this.state.jUploadData}\r\n          InternshipLine={this.state.InternshipLine}\r\n        ></UploadNIC>\r\n\r\n        <UploadStoreLocation\r\n          ref={this.ReportRef}\r\n          Show={this.state.UploadStoreLocation}\r\n          OnHide={this.onUploadStoreLocationClick}\r\n          FileInfo={this.state.jUploadData}\r\n          InternshipLine={this.state.InternshipLine}\r\n        ></UploadStoreLocation>\r\n\r\n        <UploadAttchment\r\n          ref={this.ReportRef}\r\n          Show={this.state.UploadAttchment}\r\n          OnHide={this.onUploadUploadAttchmentClick}\r\n          FileInfo={this.state.FileInfo}\r\n          AttachmentID={this.state.AttachmentID}\r\n        ></UploadAttchment>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp1;\r\n"],"sourceRoot":""}