{"version":3,"sources":["App/components/MainCard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/Navbar.js","Forms/Admin/ApprovalLevelMapping.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","backgroundColor","children","Component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_excluded","NavbarBrand","React","forwardRef","_ref","ref","bsPrefix","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","NavbarCollapse","NavbarContext","Consumer","context","Collapse","expanded","NavbarToggle","label","_ref$as","_ref2","useContext","onToggle","handleClick","useEventCallback","e","type","defaultProps","NavbarText","createWithBsPrefix","Navbar","_useUncontrolled","useUncontrolled","initialBsPrefix","expand","variant","bg","fixed","sticky","_useUncontrolled$as","_onToggle","onSelect","collapseOnSelect","controlledProps","handleCollapse","useCallback","role","expandClass","navbarContext","useMemo","Provider","SelectableContext","Brand","Text","ApprovalLevelMapping","FormRef","useRef","useState","groups","setGroups","prtype","setPRType","items","setItems","appovallevel","setappovallevel","rowIndex","setRowIndex","isUpdate","setIsUpdate","isAdd","setISAdd","isEdit","setISEdit","setIsView","userName","setUserName","jForm","PRType","ItemCategory","UserGroup","ApprovalLevel","ApprovalLevelName","IncreaseQty","DecreaseQty","MinValue","MaxValue","RequiredAttachments_1","RequiredAttachments_2","RequiredAttachments_3","viewApprovalLevelMapping","approvalMappings","LoadPanelVisible","ListViewing","GroupTable","jSetForm","boolValue","RequiredAttachments","ID","Name","FormLayout","current","instance","useEffect","fetchGroupDetails","authData","JSON","parse","localStorage","getItem","axios","get","params","UsersID","UserName","MenuID","checkAuthentication","data","length","UserView","groupResponse","prtypeResponse","itemResponse","getApprovalLevelMapping","console","log","UserAdd","UserEdit","OnNotification","message","notify","displayTime","at","offset","OnSaveValidation","max","parseFloat","min","validate","isValid","NaN","handleViewList","focusTextBox","editor","getEditor","focus","formData","caption","colCount","dataField","editorType","editorOptions","readOnly","dataSource","valueExpr","displayExpr","maxLength","onValueChanged","level","TransactionType","approvalLevel","text","response","approvalLevelName","location","icon","stringify","post","approvalMapping","UserID","Index","Swal","fire","res","catch","confirmButtonColor","confirmButtonText","disabled","showBorders","wordWrapEnabled","allowSearch","selection","mode","allowColumnResizing","hoverStateEnabled","onCellDblClick","setTimeout","visible","defaultPageSize","dataType","shadingColor","showIndicator","shading","showPane","closeOnOutsideClick"],"mappings":"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","file":"static/js/21.f6f4ab9a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\n{\r\n  /* <Card className=\"customCard\"></Card>\r\n\r\n.customCard: {\r\n    background: blue !important;\r\n} */\r\n}\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader, cardColor;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body style={{ backgroundColor: \"rgb(185, 210, 214)\" }}>\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavbarBrand = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  var Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"bsPrefix\"];\nimport React from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar NavbarCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  return /*#__PURE__*/React.createElement(NavbarContext.Consumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      in: !!(context && context.expanded)\n    }, props), /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      className: bsPrefix\n    }, children));\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"label\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar defaultProps = {\n  label: 'Toggle navigation'\n};\nvar NavbarToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle,\n      expanded = _ref2.expanded;\n\n  var handleClick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed')\n  }), children || /*#__PURE__*/React.createElement(\"span\", {\n    className: bsPrefix + \"-icon\"\n  }));\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;","import React, {\r\n  FormRef,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  RequiredRule,\r\n  GroupItem,\r\n  EmptyItem,\r\n} from \"devextreme-react/form\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  Lookup,\r\n  Paging,\r\n} from \"devextreme-react/data-grid\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport Card from \"../../App/components/MainCard\";\r\n\r\nconst ApprovalLevelMapping = () => {\r\n  // const [approvalMapping, setApprovalMapping] = useState([]); // Define users state variable\r\n  const FormRef = useRef(null);\r\n\r\n  const [groups, setGroups] = useState([]);\r\n  const [prtype, setPRType] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [appovallevel, setappovallevel] = useState([]);\r\n  // const [approvallevelName, setApprovalLevelName] = useState([]);\r\n  // const [isUpdate, setIsUpdate] = useState(true);\r\n  const [rowIndex, setRowIndex] = useState(-1);\r\n\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [isAdd, setISAdd] = useState(true);\r\n  const [isEdit, setISEdit] = useState(true);\r\n  const [isView, setIsView] = useState(true);\r\n  const [userName, setUserName] = useState({});\r\n\r\n  const [state, setState] = useState({\r\n    jForm: {\r\n      PRType: \"\",\r\n      ItemCategory: \"\",\r\n      UserGroup: \"\",\r\n      ApprovalLevel: \"\",\r\n      ApprovalLevelName: \"\",\r\n      IncreaseQty: false,\r\n      DecreaseQty: false,\r\n      MinValue: \"\",\r\n      MaxValue: \"\",\r\n      RequiredAttachments_1: false,\r\n      RequiredAttachments_2: false,\r\n      RequiredAttachments_3: false,\r\n    },\r\n    viewApprovalLevelMapping: 0,\r\n    approvalMappings: [],\r\n    LoadPanelVisible: false,\r\n    ListViewing: false,\r\n    GroupTable: [],\r\n    jSetForm: {},\r\n    boolValue: false,\r\n    // fvdfv: false,\r\n    RequiredAttachments: [\r\n      { ID: 0, Name: \"Min\" },\r\n      { ID: 1, Name: \"Medium\" },\r\n      { ID: 2, Name: \"Max\" },\r\n    ],\r\n  });\r\n\r\n  const FormLayout = FormRef.current && FormRef.current.instance;\r\n\r\n  useEffect(() => {\r\n    fetchGroupDetails();\r\n  }, []);\r\n\r\n  const fetchGroupDetails = async () => {\r\n    const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const checkAuthentication = await axios.get(\r\n      \"/api/CheckUserAuthentication\",\r\n      {\r\n        params: { UsersID: authData.UserName, MenuID: 9005 },\r\n      }\r\n    );\r\n    setUserName(authData.UserName);\r\n    if (checkAuthentication.data.length != 0) {\r\n      if (checkAuthentication.data[0].UserView) {\r\n        setIsView(false);\r\n        try {\r\n          const groupResponse = await axios.get(\"/api/getallgroupforapproval\");\r\n          setGroups(groupResponse.data);\r\n\r\n          const prtypeResponse = await axios.get(\r\n            \"/api/getallPRTypeforapproval\"\r\n          );\r\n          setPRType(prtypeResponse.data);\r\n\r\n          const itemResponse = await axios.get(\"/api/getallitemforapproval\");\r\n          setItems(itemResponse.data);\r\n\r\n          const getApprovalLevelMapping = await axios.get(\r\n            \"/api/getallapprovallevelmapping\"\r\n          );\r\n          console.log(\"getApprovalLevelMapping\", getApprovalLevelMapping.data);\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            jForm: { MinValue: 0, MaxValue: 1 },\r\n            approvalMappings: getApprovalLevelMapping.data,\r\n          }));\r\n        } catch (error) {\r\n          console.error(\"Error fetching details:\", error);\r\n        }\r\n      }\r\n      if (checkAuthentication.data[0].UserAdd) {\r\n        setISAdd(false);\r\n      }\r\n      if (checkAuthentication.data[0].UserEdit) {\r\n        setISEdit(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleApprovalLevelChange = async (e) => {\r\n    // console.log(\"ApprovalLevel\", state.jForm.ApprovalLevel);\r\n    // console.log(\"isUpdate\", isUpdate);\r\n    // if (!isUpdate) {\r\n    if (state.jForm.ApprovalLevel != undefined) {\r\n      try {\r\n        const response = await axios.get(\"/api/getApprovalLevelName\", {\r\n          params: {\r\n            ApprovalLevel: state.jForm.ApprovalLevel,\r\n            TransactionType: state.jForm.PRType,\r\n          },\r\n        });\r\n\r\n        const approvalLevelName = response.data;\r\n\r\n        setState((prevState) => ({\r\n          jForm: {\r\n            ...prevState.jForm,\r\n            ApprovalLevelName: approvalLevelName.ApprovalLevelName,\r\n          },\r\n          approvalMappings: [...prevState.approvalMappings],\r\n          // jForm: { ApprovalLevelName: approvalLevelName.ApprovalLevelName },\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching approval level name:\", error);\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          ApprovalLevelName: \"Default Approval Level Name\",\r\n        }));\r\n        // setApprovalLevelName(() => ({\r\n        //   approvallevelName: \"Default Approval Level Name\",\r\n        // }));\r\n      }\r\n    }\r\n    // }\r\n  };\r\n\r\n  const OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  const OnSaveValidation = async () => {\r\n    const { jForm } = state;\r\n    let max = parseFloat(jForm.MaxValue);\r\n    let min = parseFloat(jForm.MinValue);\r\n    if (!FormLayout.validate().isValid) {\r\n      OnNotification(\"Fields marked with * are required\", \"error\");\r\n      return false;\r\n    } else if (\r\n      jForm.PRType == \"\" ||\r\n      jForm.PRType == NaN ||\r\n      jForm.PRType == undefined\r\n    ) {\r\n      OnNotification(\"PRType is Required\", \"error\");\r\n      return false;\r\n    } else if (\r\n      jForm.UserGroup == \"\" ||\r\n      jForm.UserGroup == NaN ||\r\n      jForm.UserGroup == undefined\r\n    ) {\r\n      OnNotification(\"UserGroup is Required\", \"error\");\r\n      return false;\r\n    } else if (\r\n      jForm.ItemCategory == \"\" ||\r\n      jForm.ItemCategory == NaN ||\r\n      jForm.ItemCategory == undefined\r\n    ) {\r\n      OnNotification(\"ItemCategory is Required\", \"error\");\r\n      return false;\r\n    } else if (\r\n      jForm.ApprovalLevel == \"\" ||\r\n      jForm.ApprovalLevel == NaN ||\r\n      jForm.ApprovalLevel == undefined\r\n    ) {\r\n      OnNotification(\"ApprovalLevel is Required\", \"error\");\r\n      return false;\r\n    } else if (max < 1) {\r\n      OnNotification(\"Max Value is Should be Greater Than 0\", \"error\");\r\n      return false;\r\n    } else if (min < 0) {\r\n      OnNotification(\"Min Value is Should be Greater Than or Equal 0\", \"error\");\r\n      return false;\r\n    } else if (max <= min) {\r\n      OnNotification(\"Max Value is Should be Greater Than Min Value\", \"error\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    if (await OnSaveValidation()) {\r\n      console.log(JSON.stringify(state.jForm));\r\n      axios\r\n        .post(\"/api/addApprovalMapping\", {\r\n          approvalMapping: JSON.stringify(state.jForm),\r\n          UserID: userName,\r\n          Index: rowIndex,\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Approval Level Mapping details saved successfully!\",\r\n          }).then((res) => {\r\n            handleViewList();\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: '<span style=\"color: red;\">Error!</span>',\r\n            text: \"Failed to save approval level mapping details\",\r\n            confirmButtonColor: \"#d33\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleViewList = async () => {\r\n    const getApprovalLevelMapping = await axios.get(\r\n      \"/api/getallapprovallevelmapping\"\r\n    );\r\n    console.log(getApprovalLevelMapping.data);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      approvalMappings: getApprovalLevelMapping.data,\r\n      jForm: { MinValue: 0, MaxValue: 1 },\r\n      boolValue: false,\r\n    }));\r\n    // handleClear();\r\n  };\r\n\r\n  const handleClear = async () => {\r\n    setState({\r\n      ...state,\r\n      jForm: { MinValue: 0, MaxValue: 1 },\r\n      boolValue: false,\r\n    });\r\n    // setIsUpdate(false);\r\n  };\r\n\r\n  // const onSelectionChanged = (e) => {\r\n  //   console.log(e.selectedRowsData[0]);\r\n  //   setState((prevState) => ({\r\n  //     ...prevState,\r\n  //     jSetForm: e.selectedRowsData[0],\r\n  //   }));\r\n  // };\r\n\r\n  // const onOpenClick = () => {\r\n  //   setState({ jForm: state.jSetForm });\r\n  //   setState((prevState) => ({\r\n  //     ...prevState,\r\n  //     approvalMappings: state.approvalMappings,\r\n  //     // jForm: state.jSetForm,\r\n  //     boolValue: true,\r\n  //     fvdfv: false,\r\n  //   }));\r\n  // };\r\n\r\n  const updateTable = (e) => {\r\n    console.log(e.data.Index);\r\n    if (!isEdit) {\r\n      setIsUpdate(true);\r\n      setState({\r\n        jForm: e.data,\r\n        approvalMappings: state.approvalMappings,\r\n        boolValue: true,\r\n      });\r\n      // setIsUpdate(false);\r\n      setRowIndex(e.data.Index);\r\n      setIsUpdate(false);\r\n      setTimeout(() => {\r\n        focusTextBox();\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const focusTextBox = useCallback(() => {\r\n    if (FormRef.current) {\r\n      const formInstance = FormRef.current.instance;\r\n      const editor = formInstance.getEditor(\"ApprovalLevel\");\r\n      if (editor) {\r\n        editor.focus();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const setApprovalLevelDetails = async (level) => {\r\n    console.log(\"ApprovalLevel\", state.jForm.ApprovalLevel);\r\n    console.log(\"isUpdate\", isUpdate);\r\n    // if () {\r\n    console.log(\"AWA\");\r\n    const getApprovalLevelMapping = await axios.get(\r\n      \"/api/getallapprovallevelmapping\"\r\n    );\r\n    if (!isUpdate) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        jForm: {\r\n          ...prevState.jForm,\r\n          ApprovalLevel: null,\r\n          ApprovalLevelName: null,\r\n        },\r\n        approvalMappings: getApprovalLevelMapping.data,\r\n      }));\r\n    }\r\n\r\n    const approvalLevel = await axios.get(\"/api/filterApprovalLevelDetails\", {\r\n      params: { TransactionType: level.value },\r\n    });\r\n\r\n    if (approvalLevel.data.length != 0) {\r\n      setappovallevel(approvalLevel.data);\r\n    } else setappovallevel([]);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card title=\"Approval Level Mapping\">\r\n        <Form ref={FormRef} formData={state.jForm}>\r\n          <GroupItem caption=\"Approval\" colCount={2}>\r\n            <Item\r\n              dataField=\"PRType\"\r\n              editorType=\"dxSelectBox\"\r\n              editorOptions={{\r\n                readOnly: state.boolValue,\r\n                dataSource: prtype,\r\n                valueExpr: \"PRTypeCode\",\r\n                displayExpr: \"Discription\",\r\n                maxLength: 50,\r\n                onValueChanged: setApprovalLevelDetails,\r\n              }}\r\n            >\r\n              <RequiredRule message=\"Field required\" />\r\n              <Label text=\"PR Type\"></Label>\r\n            </Item>\r\n            <Item\r\n              dataField=\"ItemCategory\"\r\n              editorType=\"dxSelectBox\"\r\n              editorOptions={{\r\n                readOnly: state.boolValue,\r\n                dataSource: items,\r\n                valueExpr: \"FldValue\",\r\n                displayExpr: \"FldValue\",\r\n                maxLength: 50,\r\n              }}\r\n            >\r\n              <RequiredRule message=\"Field required\" />\r\n              <Label text=\"Item Type \"></Label>\r\n            </Item>\r\n            <Item\r\n              dataField=\"UserGroup\"\r\n              editorType=\"dxSelectBox\"\r\n              editorOptions={{\r\n                readOnly: state.boolValue,\r\n                dataSource: groups,\r\n                valueExpr: \"GroupCode\",\r\n                displayExpr: \"Discription\",\r\n                maxLength: 50,\r\n              }}\r\n            >\r\n              <RequiredRule message=\"Field required\" />\r\n              <Label text=\"User Group\"></Label>\r\n            </Item>\r\n            <EmptyItem />\r\n          </GroupItem>\r\n\r\n          <GroupItem caption=\"Approval Level\" colCount={2}>\r\n            <Item\r\n              dataField=\"ApprovalLevel\"\r\n              editorType=\"dxSelectBox\"\r\n              editorOptions={{\r\n                readOnly: state.boolValue,\r\n                dataSource: appovallevel,\r\n                valueExpr: \"ApprovalLevel\",\r\n                displayExpr: \"ApprovalLevel\",\r\n                maxLength: 50,\r\n                onValueChanged: handleApprovalLevelChange,\r\n              }}\r\n            >\r\n              <RequiredRule message=\"Field required\" />\r\n              <Label text=\"Approval Level ID\"></Label>\r\n            </Item>\r\n\r\n            <Item\r\n              dataField=\"ApprovalLevelName\"\r\n              editorOptions={{\r\n                maxLength: 50,\r\n                readOnly: true,\r\n                // value: state.ApprovalLevelName,\r\n              }}\r\n            >\r\n              <Label text=\"Approval Level Description\"></Label>\r\n            </Item>\r\n          </GroupItem>\r\n\r\n          <GroupItem caption=\"Quantity Limit\" colCount={2}>\r\n            <Item dataField=\"IncreaseQty\" editorType=\"dxCheckBox\">\r\n              <Label text=\"Allow To Increase Qty\"></Label>\r\n            </Item>\r\n\r\n            <Item dataField=\"DecreaseQty\" editorType=\"dxCheckBox\">\r\n              <Label text=\"Allow To Decrease Qty\"></Label>\r\n            </Item>\r\n          </GroupItem>\r\n\r\n          <GroupItem caption=\"Finance Limit\" colCount={2}>\r\n            <Item\r\n              dataField=\"MinValue\"\r\n              editorType=\"dxNumberBox\"\r\n              editorOptions={{\r\n                maxLength: 50,\r\n              }}\r\n            >\r\n              <Label text=\"Min Value\" location=\"left\"></Label>\r\n            </Item>\r\n            <Item\r\n              dataField=\"MaxValue\"\r\n              editorType=\"dxNumberBox\"\r\n              editorOptions={{\r\n                maxLength: 50,\r\n              }}\r\n            >\r\n              <Label text=\"Max Value\" location=\"left\"></Label>\r\n            </Item>\r\n          </GroupItem>\r\n\r\n          <GroupItem caption=\"Required Attachments\" colCount={2}>\r\n            <Item dataField=\"RequiredAttachments_1\" editorType=\"dxCheckBox\">\r\n              <Label text=\"Specification\"></Label>\r\n            </Item>\r\n            <Item dataField=\"RequiredAttachments_2\" editorType=\"dxCheckBox\">\r\n              <Label text=\"BOQ\"></Label>\r\n            </Item>\r\n            <Item dataField=\"RequiredAttachments_3\" editorType=\"dxCheckBox\">\r\n              <Label text=\"Drawing\"></Label>\r\n            </Item>\r\n          </GroupItem>\r\n        </Form>\r\n        <br />\r\n        <br />\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={handleSave}\r\n            disabled={isAdd}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={handleClear}\r\n            disabled={isAdd}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Navbar>\r\n        <br></br>\r\n      </Card>\r\n      <br></br>\r\n\r\n      <h3>Mapping Details</h3>\r\n      <br></br>\r\n\r\n      {!state.LoadPanelVisible && (\r\n        <DataGrid\r\n          showBorders={true}\r\n          dataSource={state.approvalMappings}\r\n          wordWrapEnabled={true}\r\n          allowSearch={true}\r\n          selection={{ mode: \"single\" }}\r\n          allowColumnResizing={true}\r\n          hoverStateEnabled={true}\r\n          // onSelectionChanged={onSelectionChanged}\r\n          onCellDblClick={updateTable}\r\n        >\r\n          <SearchPanel visible={true} />\r\n          <Paging defaultPageSize={20} />\r\n          <Column dataField=\"Index\" visible={false} />\r\n          <Column dataField=\"PRType\" caption=\"PR Type\">\r\n            <Lookup\r\n              items={prtype}\r\n              valueExpr=\"PRTypeCode\"\r\n              displayExpr=\"Discription\"\r\n            />\r\n          </Column>\r\n          <Column dataField=\"ItemCategory\" caption=\"Item Category\" />\r\n          <Column dataField=\"UserGroup\" caption=\"User Group\">\r\n            <Lookup\r\n              items={groups}\r\n              valueExpr=\"GroupCode\"\r\n              displayExpr=\"Discription\"\r\n            />\r\n          </Column>\r\n\r\n          <Column caption=\"Approval Level\">\r\n            <Column dataField=\"ApprovalLevel\" caption=\"Approval Level ID\" />\r\n            <Column\r\n              dataField=\"ApprovalLevelName\"\r\n              caption=\"Approval Level Name\"\r\n            />\r\n          </Column>\r\n\r\n          <Column caption=\"Quantity Limit \">\r\n            <Column\r\n              dataField=\"IncreaseQty\"\r\n              caption=\"Allow To Increase Qty\"\r\n              dataType=\"bit\"\r\n            />\r\n            <Column\r\n              dataField=\"DecreaseQty\"\r\n              caption=\"Allow To Decrease Qty\"\r\n              dataType=\"bit\"\r\n            />\r\n          </Column>\r\n\r\n          <Column caption=\"Finance Limit \">\r\n            <Column dataField=\"MinValue\" caption=\"Min Value\" />\r\n            <Column dataField=\"MaxValue\" caption=\"Max Value\" />\r\n          </Column>\r\n\r\n          <Column caption=\"Required Attachment\">\r\n            <Column\r\n              dataField=\"RequiredAttachments_1\"\r\n              caption=\"Specification\"\r\n              dataType=\"bit\"\r\n            />\r\n            <Column\r\n              dataField=\"RequiredAttachments_2\"\r\n              caption=\"BOQ\"\r\n              dataType=\"bit\"\r\n            />\r\n            <Column\r\n              dataField=\"RequiredAttachments_3\"\r\n              caption=\"Drawing\"\r\n              dataType=\"bit\"\r\n            />\r\n          </Column>\r\n        </DataGrid>\r\n      )}\r\n\r\n      <LoadPanel\r\n        message=\"Processing.... Please, wait...\"\r\n        shadingColor=\"rgba(0,0,0,0.4)\"\r\n        // onHiding={this.onLoadPanelHiding}\r\n        // visible={this.state.LoadPanelVisible}\r\n        showIndicator={true}\r\n        shading={true}\r\n        showPane={true}\r\n        closeOnOutsideClick={false}\r\n        width={500}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApprovalLevelMapping;\r\n"],"sourceRoot":""}