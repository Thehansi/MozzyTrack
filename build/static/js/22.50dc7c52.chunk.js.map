{"version":3,"sources":["App/components/MainCard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/Navbar.js","Forms/Group/Create-Group.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","backgroundColor","children","Component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_excluded","NavbarBrand","React","forwardRef","_ref","ref","bsPrefix","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","NavbarCollapse","NavbarContext","Consumer","context","Collapse","expanded","NavbarToggle","label","_ref$as","_ref2","useContext","onToggle","handleClick","useEventCallback","e","type","defaultProps","NavbarText","createWithBsPrefix","Navbar","_useUncontrolled","useUncontrolled","initialBsPrefix","expand","variant","bg","fixed","sticky","_useUncontrolled$as","_onToggle","onSelect","collapseOnSelect","controlledProps","handleCollapse","useCallback","role","expandClass","navbarContext","useMemo","Provider","SelectableContext","Brand","Text","Group","FormRef","useRef","useState","isAdd","setISAdd","isEdit","setISEdit","isView","setIsView","updateRow","setUpdateRow","userName","setUserName","useEffect","setDetails","authData","JSON","parse","localStorage","getItem","axios","get","params","UsersID","UserName","MenuID","checkAuthentication","data","length","UserView","response","console","log","groups","catch","Swal","fire","icon","text","confirmButtonColor","confirmButtonText","UserAdd","UserEdit","jForm","GroupCode","Discription","Active","viewGroupCode","LoadPanelVisible","ListViewing","GroupTable","jSetForm","boolValue","fvdfv","rowIndex","setRowIndex","FormLayout","current","instance","OnNotification","message","notify","displayTime","at","offset","OnSaveValidation","validate","isValid","focusTextBox","editor","getEditor","focus","formData","colCount","dataField","editorOptions","border","maxLength","readOnly","caption","editorType","isUpdate","group_exists","post","group","stringify","UserID","res","newGroup","oldGroups","window","location","reload","disabled","dataSource","showBorders","wordWrapEnabled","allowSearch","selection","mode","hoverStateEnabled","onCellDblClick","setTimeout","visible","defaultPageSize","dataType"],"mappings":"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","file":"static/js/22.50dc7c52.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\n{\r\n  /* <Card className=\"customCard\"></Card>\r\n\r\n.customCard: {\r\n    background: blue !important;\r\n} */\r\n}\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader, cardColor;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body style={{ backgroundColor: \"rgb(185, 210, 214)\" }}>\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavbarBrand = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  var Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"bsPrefix\"];\nimport React from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar NavbarCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  return /*#__PURE__*/React.createElement(NavbarContext.Consumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      in: !!(context && context.expanded)\n    }, props), /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      className: bsPrefix\n    }, children));\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"label\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar defaultProps = {\n  label: 'Toggle navigation'\n};\nvar NavbarToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle,\n      expanded = _ref2.expanded;\n\n  var handleClick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed')\n  }), children || /*#__PURE__*/React.createElement(\"span\", {\n    className: bsPrefix + \"-icon\"\n  }));\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport { ColorBox, LoadPanel } from \"devextreme-react\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging,\r\n  Editing,\r\n  Label,\r\n} from \"devextreme-react/data-grid\";\r\nimport { FileUploader } from \"devextreme-react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport Form, { Item, GroupItem, RequiredRule } from \"devextreme-react/form\";\r\n\r\nconst Group = () => {\r\n  const FormRef = useRef(null);\r\n  const [isAdd, setISAdd] = useState(true);\r\n  const [isEdit, setISEdit] = useState(true);\r\n  const [isView, setIsView] = useState(true);\r\n  const [updateRow, setUpdateRow] = useState(true);\r\n\r\n  const [userName, setUserName] = useState(true);\r\n  //const FormRef = React.createRef();\r\n  useEffect(() => {\r\n    setDetails();\r\n  }, []);\r\n\r\n  const setDetails = async () => {\r\n    const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const checkAuthentication = await axios.get(\r\n      \"/api/CheckUserAuthentication\",\r\n      {\r\n        params: { UsersID: authData.UserName, MenuID: 1008 },\r\n      }\r\n    );\r\n    setUserName(authData.UserName);\r\n    if (checkAuthentication.data.length != 0) {\r\n      if (checkAuthentication.data[0].UserView) {\r\n        setIsView(false);\r\n        axios\r\n          .get(\"/api/getallgroup\")\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            setState((prevState) => ({\r\n              ...prevState,\r\n              groups: response.data,\r\n            }));\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: '<span style=\"color: red;\">Error!</span>',\r\n              text: \"Failed to view user group details\",\r\n              confirmButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          });\r\n      }\r\n      if (checkAuthentication.data[0].UserAdd) {\r\n        setISAdd(false);\r\n      }\r\n      if (checkAuthentication.data[0].UserEdit) {\r\n        console.log(\"AWA\");\r\n        setISEdit(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    jForm: {\r\n      GroupCode: \"\",\r\n      Discription: \"\",\r\n      Active: true,\r\n    },\r\n    viewGroupCode: 0,\r\n    groups: [],\r\n    LoadPanelVisible: false,\r\n    ListViewing: false,\r\n    GroupTable: [],\r\n    jSetForm: {},\r\n    boolValue: false,\r\n    fvdfv: false,\r\n  });\r\n\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const FormLayout = FormRef.current && FormRef.current.instance;\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      jForm: {\r\n        ...prevState.jForm,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const borderOption = {\r\n    style: { border: \"2px solid black\", fontWeight: \"bold\" },\r\n  };\r\n\r\n  const OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  const OnSaveValidation = async () => {\r\n    console.log(\"validation  2\", !FormLayout.validate().isValid);\r\n    if (!FormLayout.validate().isValid) {\r\n      OnNotification(\"Fields marked with * are required\", \"error\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    if (await OnSaveValidation()) {\r\n      const isUpdate = await axios.get(\"/api/checkGroupCode\", {\r\n        params: { GroupCode: state.jForm.GroupCode },\r\n      });\r\n      console.log(\"isUpdate\", isUpdate.data[0].group_exists);\r\n      if (updateRow) {\r\n        if (isUpdate.data[0].group_exists == 0) {\r\n          axios\r\n            .post(\"/api/addGroup\", {\r\n              group: JSON.stringify(state.jForm),\r\n              UserID: userName,\r\n            })\r\n            .then((response) => {\r\n              console.log(response.data);\r\n              // Handle success response\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Success\",\r\n                text: \"Data saved successfully!\",\r\n              }).then((res) => {\r\n                const newGroup = state.jForm;\r\n                if (!isView) {\r\n                  if (state.boolValue) {\r\n                    const oldGroups = state.groups;\r\n                    oldGroups[rowIndex] = state.jForm;\r\n                    setState((prevState) => ({\r\n                      ...prevState,\r\n                      groups: oldGroups,\r\n                      jForm: { Active: true },\r\n                      boolValue: false,\r\n                    }));\r\n                    window.location.reload();\r\n                  } else {\r\n                    setState((prevState) => ({\r\n                      ...prevState,\r\n                      groups: [...prevState.groups, newGroup],\r\n                      jForm: { Active: true },\r\n                      boolValue: false,\r\n                    }));\r\n                    window.location.reload();\r\n                  }\r\n                }\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error:\", error);\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: '<span style=\"color: red;\">Error!</span>',\r\n                text: \"Failed to save user group details\",\r\n                confirmButtonColor: \"#d33\",\r\n                confirmButtonText: \"OK\",\r\n              });\r\n            });\r\n        } else {\r\n          OnNotification(\"Already added group code\", \"error\");\r\n        }\r\n      } else {\r\n        axios\r\n          .post(\"/api/addGroup\", {\r\n            group: JSON.stringify(state.jForm),\r\n            UserID: userName,\r\n          })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            // Handle success response\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Success\",\r\n              text: \"Data update successfully!\",\r\n            }).then((res) => {\r\n              const newGroup = state.jForm;\r\n              if (!isView) {\r\n                if (state.boolValue) {\r\n                  const oldGroups = state.groups;\r\n                  oldGroups[rowIndex] = state.jForm;\r\n                  setState((prevState) => ({\r\n                    ...prevState,\r\n                    groups: oldGroups,\r\n                    jForm: { Active: true },\r\n                    boolValue: false,\r\n                  }));\r\n                  window.location.reload();\r\n                } else {\r\n                  setState((prevState) => ({\r\n                    ...prevState,\r\n                    groups: [...prevState.groups, newGroup],\r\n                    jForm: { Active: true },\r\n                    boolValue: false,\r\n                  }));\r\n                  window.location.reload();\r\n                }\r\n              }\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: '<span style=\"color: red;\">Error!</span>',\r\n              text: \"Failed to save user group details\",\r\n              confirmButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setState({\r\n      ...state,\r\n      jForm: { Active: true },\r\n      boolValue: false,\r\n    });\r\n  };\r\n\r\n  const updateTable = (e) => {\r\n    console.log(\"e\", e);\r\n    if (!isEdit) {\r\n      setState({ jForm: e.data, groups: state.groups, boolValue: true });\r\n      setUpdateRow(false);\r\n      setRowIndex(e.data.rowIndex);\r\n\r\n      setTimeout(() => {\r\n        focusTextBox();\r\n      }, 100);\r\n    }\r\n  };\r\n  const focusTextBox = useCallback(() => {\r\n    if (FormRef.current) {\r\n      const formInstance = FormRef.current.instance;\r\n      const editor = formInstance.getEditor(\"Discription\");\r\n      if (editor) {\r\n        editor.focus();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card title=\"User Group\" style={{ backgroundColor: \"Blue\" }}>\r\n        <Form ref={FormRef} formData={state.jForm}>\r\n          <GroupItem colCount={2}>\r\n            <Item\r\n              dataField=\"GroupCode\"\r\n              editorOptions={{\r\n                style: { border: \"6px solid black\" },\r\n                maxLength: 20,\r\n                readOnly: state.boolValue,\r\n              }}\r\n              // caption=\"Group Code\"\r\n            >\r\n              <RequiredRule message=\"Field required\" />\r\n              <Label text=\"Group Code\"></Label>\r\n            </Item>\r\n\r\n            <Item\r\n              dataField=\"Discription\"\r\n              editorOptions={{\r\n                style: { border: \"6px solid black\" },\r\n              }}\r\n              caption=\"Description\"\r\n            >\r\n              <RequiredRule message=\"Field required\" />\r\n              <Label text=\"Description\"></Label>\r\n            </Item>\r\n            <Item\r\n              dataField=\"Active\"\r\n              editorType=\"dxCheckBox\"\r\n              editorOptions={{}}\r\n            ></Item>\r\n          </GroupItem>\r\n        </Form>\r\n        <br />\r\n        <br />\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={handleSave}\r\n            disabled={isAdd}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={handleClear}\r\n            disabled={isAdd}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Navbar>\r\n      </Card>\r\n      <Card title=\"User Group List\">\r\n        <div>\r\n          <DataGrid\r\n            dataSource={state.groups}\r\n            showBorders={true}\r\n            wordWrapEnabled={true}\r\n            allowSearch={true}\r\n            selection={{ mode: \"single\" }}\r\n            hoverStateEnabled={true}\r\n            onCellDblClick={updateTable}\r\n          >\r\n            <SearchPanel visible={true} />\r\n            <Paging defaultPageSize={20} />\r\n\r\n            <Column dataField=\"GroupCode\" caption=\"Group Code\" />\r\n            <Column dataField=\"Discription\" caption=\"Description\" />\r\n            <Column dataField=\"Active\" caption=\"Active\" dataType=\"bit\" />\r\n          </DataGrid>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n"],"sourceRoot":""}