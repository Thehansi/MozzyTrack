{"version":3,"sources":["App/components/MainCard.js","Forms/Admin/Users.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","backgroundColor","children","Component","User","useState","user","FormRef","useRef","groups","setGroups","branches","setBranches","departments","setDepartments","isAdd","setISAdd","isEdit","setISEdit","setIsView","number","setNumber","UserName","setUserName","setIsUpdate","jForm","UserGroup","Password","ConfirmPassword","Branch","Department","Email","ContactNo","Active","viewUser","users","LoadPanelVisible","ListViewing","GroupTable","jSetForm","boolValue","fvdfv","useEffect","fetchGroupDetails","authData","JSON","parse","localStorage","getItem","axios","get","params","UsersID","MenuID","checkAuthentication","data","length","UserView","groupResponse","branchResponse","departmentResponse","getUsers","console","error","UserAdd","UserEdit","FormLayout","current","instance","OnNotification","message","type","notify","displayTime","at","offset","OnSaveValidation","matchPassword","emailRegex","map","toLowerCase","validate","isValid","NaN","undefined","test","trim","focusTextBox","useCallback","editor","getEditor","focus","PasswordCell","value","maskedValue","repeat","border","outline","background","ref","formData","caption","colCount","dataField","editorOptions","readOnly","text","editorType","searchEnabled","dataSource","valueExpr","displayExpr","mode","minLength","onInput","e","inputElement","event","target","slice","showSpinButtons","bg","variant","icon","post","group","stringify","UserID","then","response","log","Swal","fire","res","catch","confirmButtonColor","confirmButtonText","disabled","showBorders","wordWrapEnabled","allowSearch","selection","hoverStateEnabled","onCellDblClick","setTimeout","allowColumnResizing","visible","defaultPageSize","cellRender","dataType","shadingColor","showIndicator","shading","showPane","closeOnOutsideClick"],"mappings":"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","file":"static/js/44.642cb72f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\n{\r\n  /* <Card className=\"customCard\"></Card>\r\n\r\n.customCard: {\r\n    background: blue !important;\r\n} */\r\n}\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader, cardColor;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body style={{ backgroundColor: \"rgb(185, 210, 214)\" }}>\r\n              {this.props.children}\r\n            </Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport { ColorBox, LoadPanel } from \"devextreme-react\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging,\r\n  Editing,\r\n  Lookup,\r\n} from \"devextreme-react/data-grid\";\r\nimport { FileUploader } from \"devextreme-react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport Form, {\r\n  Item,\r\n  GroupItem,\r\n  RequiredRule,\r\n  StringLengthRule,\r\n  CompareRule,\r\n  Input,\r\n  Icon,\r\n} from \"devextreme-react/form\";\r\nimport { NumberBox } from \"devextreme-react/number-box\";\r\n\r\nimport { SelectBox, DateBox } from \"devextreme-react\";\r\nimport { Label } from \"devextreme-react/form\";\r\nimport { Break } from \"devextreme-react/cjs/range-selector\";\r\n\r\nconst User = () => {\r\n  const [user, setUser] = useState([]);\r\n  const FormRef = useRef(null);\r\n\r\n  const [groups, setGroups] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n\r\n  const [isAdd, setISAdd] = useState(true);\r\n  const [isEdit, setISEdit] = useState(true);\r\n  const [isView, setIsView] = useState(true);\r\n  const [number, setNumber] = useState(0);\r\n  const [UserName, setUserName] = useState(true);\r\n  const [isUpdate, setIsUpdate] = useState(true);\r\n  const [state, setState] = useState({\r\n    jForm: {\r\n      UserName: \"\",\r\n      UserGroup: \"\",\r\n      Password: \"\",\r\n      ConfirmPassword: \"\",\r\n      Branch: \"\",\r\n      Department: \"\",\r\n      Email: \"\",\r\n      ContactNo: \"\",\r\n      Active: true,\r\n      // CreatedDate: null,\r\n    },\r\n    viewUser: 0,\r\n    users: [],\r\n    LoadPanelVisible: false,\r\n    ListViewing: false,\r\n    GroupTable: [],\r\n    jSetForm: {},\r\n    boolValue: false,\r\n    fvdfv: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchGroupDetails();\r\n  }, []);\r\n\r\n  const fetchGroupDetails = async () => {\r\n    const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const checkAuthentication = await axios.get(\r\n      \"/api/CheckUserAuthentication\",\r\n      {\r\n        params: { UsersID: authData.UserName, MenuID: 9001 },\r\n      }\r\n    );\r\n    setUserName(authData.UserName);\r\n    if (checkAuthentication.data.length != 0) {\r\n      if (checkAuthentication.data[0].UserView) {\r\n        setIsView(false);\r\n        try {\r\n          const groupResponse = await axios.get(\"/api/getallgroupforuser\");\r\n          setGroups(groupResponse.data);\r\n\r\n          const branchResponse = await axios.get(\"/api/getallbranchforuser\");\r\n          setBranches(branchResponse.data);\r\n\r\n          const departmentResponse = await axios.get(\r\n            \"/api/getalldepartmentforuser\"\r\n          );\r\n          setDepartments(departmentResponse.data);\r\n          const getUsers = await axios.get(\"/api/getalluser\");\r\n\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            users: getUsers.data,\r\n            jForm: { Active: true },\r\n          }));\r\n        } catch (error) {\r\n          console.error(\"Error fetching details:\", error);\r\n        }\r\n      }\r\n      if (checkAuthentication.data[0].UserAdd) {\r\n        setISAdd(false);\r\n      }\r\n      if (checkAuthentication.data[0].UserEdit) {\r\n        setISEdit(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const FormLayout = FormRef.current && FormRef.current.instance;\r\n\r\n  const OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  const OnSaveValidation = async () => {\r\n    // const { jForm } = state;\r\n    const matchPassword =\r\n      /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const existingUsernames = user.map((user) => user.UserName.toLowerCase());\r\n\r\n    const { jForm } = state;\r\n\r\n    if (!FormLayout.validate().isValid) {\r\n      OnNotification(\"Fields marked with * are required\", \"error\");\r\n      return false;\r\n    } else if (\r\n      jForm.UserName == \"\" ||\r\n      jForm.UserName == NaN ||\r\n      jForm.UserName == undefined\r\n    ) {\r\n      OnNotification(\"UserName is Required\", \"error\");\r\n      return false;\r\n    } else if (\r\n      jForm.UserGroup == \"\" ||\r\n      jForm.UserGroup == NaN ||\r\n      jForm.UserGroup == undefined\r\n    ) {\r\n      OnNotification(\"UserGroup is Required\", \"error\");\r\n      return false;\r\n    }\r\n    //  if (state.jForm.PasswordChange) {\r\n    else if (\r\n      jForm.Password == \"\" ||\r\n      jForm.Password == NaN ||\r\n      jForm.Password == undefined\r\n    ) {\r\n      OnNotification(\"Password is Required\", \"error\");\r\n      return false;\r\n    } else if (matchPassword.test(jForm.Password) == false) {\r\n      OnNotification(\r\n        \"Passwords length must be 8+ and uppercase,lowercase,numbers.\",\r\n        \"error\"\r\n      );\r\n      return false;\r\n    } else if (jForm.Password != jForm.ConfirmPassword) {\r\n      OnNotification(\"New password & Confirm password must match\", \"error\");\r\n      return false;\r\n    } else if (\r\n      jForm.Department == \"\" ||\r\n      jForm.Department == NaN ||\r\n      jForm.Department == undefined\r\n    ) {\r\n      OnNotification(\"Department is Required\", \"error\");\r\n      return false;\r\n    } else if (!emailRegex.test(jForm.Email.trim())) {\r\n      OnNotification(\"Invalid Email\", \"error\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    if (await OnSaveValidation()) {\r\n      axios\r\n        .post(\"/api/addUser\", {\r\n          group: JSON.stringify(state.jForm),\r\n          UserID: UserName,\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"User details saved successfully!\",\r\n          }).then(async (res) => {\r\n            const getUsers = await axios.get(\"/api/getalluser\");\r\n            console.log(\"getUsers\", getUsers);\r\n            setState((prevState) => ({\r\n              ...prevState,\r\n              users: getUsers.data,\r\n            }));\r\n            const newUser = response.data;\r\n            setNumber(0);\r\n            setState((prevState) => ({\r\n              ...prevState,\r\n              jForm: {},\r\n              boolValue: false,\r\n              fvdfv: false,\r\n            }));\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          // Handle error\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: '<span style=\"color: red;\">Error!</span>',\r\n            text: \"Failed to save user details\",\r\n            confirmButtonColor: \"#d33\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        });\r\n      // }\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setNumber(0);\r\n    setState({\r\n      ...state,\r\n      jForm: { Active: true },\r\n      boolValue: false,\r\n    });\r\n  };\r\n\r\n  const updateTable = (e) => {\r\n    if (!isEdit) {\r\n      setNumber(e.data.ContactNo);\r\n      setState({ jForm: e.data, users: state.users, boolValue: true });\r\n      setIsUpdate(false);\r\n      setTimeout(() => {\r\n        focusTextBox();\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const focusTextBox = useCallback(() => {\r\n    if (FormRef.current) {\r\n      const formInstance = FormRef.current.instance;\r\n      const editor = formInstance.getEditor(\"UserName\");\r\n      if (editor) {\r\n        editor.focus();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleInput = (e) => {\r\n    const inputElement = e.event.target;\r\n    const value = inputElement.value;\r\n    if (value.length <= 10) {\r\n      inputElement.value = value.slice(0, 10);\r\n      setNumber(inputElement.value);\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        jForm: {\r\n          ...prevState.jForm,\r\n          ContactNo: value,\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const PasswordCell = ({ value }) => {\r\n\r\n    const maskedValue = \"*\".repeat(value.length);\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          border: \"none\",\r\n          outline: \"none\",\r\n          background: \"transparent\",\r\n          width: \"50%\",\r\n        }}\r\n      >\r\n        {maskedValue}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card title=\"User\">\r\n        <Form ref={FormRef} formData={state.jForm}>\r\n          <GroupItem caption=\"User Information\" colCount={2}>\r\n            <GroupItem>\r\n              <Item\r\n                dataField=\"UserName\"\r\n                editorOptions={{\r\n                  readOnly: state.boolValue,\r\n                }}\r\n                className=\"w-50\"\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"Username\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"UserGroup\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  searchEnabled: true,\r\n                  dataSource: groups,\r\n                  valueExpr: \"GroupCode\",\r\n                  displayExpr: \"Discription\",\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"User Group\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"Password\"\r\n                editorOptions={{\r\n                  mode: \"password\",\r\n                  // minLength: 8,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"Password\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"ConfirmPassword\"\r\n                editorOptions={{\r\n                  mode: \"password\",\r\n                  minLength: 8,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"Confirm Password\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"Branch\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  searchEnabled: true,\r\n                  dataSource: branches,\r\n                  valueExpr: \"BranchCode\",\r\n                  displayExpr: \"Discription\",\r\n                }}\r\n              >\r\n                <Label text=\"Branch\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"Department\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  searchEnabled: true,\r\n                  dataSource: departments,\r\n                  valueExpr: \"DepartmentCode\",\r\n                  displayExpr: \"Discription\",\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"Department\"></Label>\r\n              </Item>\r\n              <Item dataField=\"Email\" caption=\"Email\">\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"Email\"></Label>\r\n              </Item>\r\n\r\n              <Item dataField=\"ContactNo\">\r\n                <NumberBox\r\n                  onInput={handleInput}\r\n                  showSpinButtons={false}\r\n                  value={number}\r\n                ></NumberBox>\r\n                <Label text=\"Contact No\"></Label>\r\n              </Item>\r\n              <Item dataField=\"Active\" editorType=\"dxCheckBox\"></Item>\r\n            </GroupItem>\r\n            <GroupItem></GroupItem>\r\n          </GroupItem>\r\n        </Form>\r\n        <br></br>\r\n\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={handleSave}\r\n            disabled={isAdd}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={handleClear}\r\n            disabled={isAdd}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Navbar>\r\n      </Card>\r\n      <Card title=\"User Group List\">\r\n        <div>\r\n          <DataGrid\r\n            dataSource={state.users}\r\n            showBorders={true}\r\n            wordWrapEnabled={true}\r\n            allowSearch={true}\r\n            selection={{ mode: \"single\" }}\r\n            hoverStateEnabled={true}\r\n            onCellDblClick={updateTable}\r\n            allowColumnResizing={true}\r\n          >\r\n            <SearchPanel visible={true} />\r\n            <Paging defaultPageSize={20} />\r\n\r\n            <Column dataField=\"UserName\" caption=\"User Name\" />\r\n            <Column dataField=\"UserGroup\" caption=\"User Group\">\r\n              <Lookup\r\n                dataSource={groups}\r\n                valueExpr=\"GroupCode\"\r\n                displayExpr=\"Discription\"\r\n              />\r\n            </Column>\r\n            <Column\r\n              dataField=\"Password\"\r\n              caption=\"Password\"\r\n              cellRender={PasswordCell}\r\n            />\r\n            <Column\r\n              dataField=\"ConfirmPassword\"\r\n              caption=\"Confirm Password\"\r\n              cellRender={PasswordCell}\r\n            />\r\n            <Column dataField=\"Branch\" caption=\"Branch\" />\r\n            <Column dataField=\"Department\" caption=\"Department\" />\r\n            <Column dataField=\"Email\" caption=\"Email\" />\r\n            <Column dataField=\"ContactNo\" caption=\"Contact No\" />\r\n            <Column dataField=\"Active\" caption=\"Active\" dataType=\"bit\" />\r\n          </DataGrid>\r\n          <br></br>\r\n        </div>\r\n      </Card>\r\n\r\n      <LoadPanel\r\n        message=\"Processing.... Please, wait...\"\r\n        shadingColor=\"rgba(0,0,0,0.4)\"\r\n        showIndicator={true}\r\n        shading={true}\r\n        showPane={true}\r\n        closeOnOutsideClick={false}\r\n        width={500}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}