{"version":3,"sources":["../../src/FileSaver.js","Forms/Inquiry/PendingApprovalList.jsx"],"names":["console","status","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","name","location","setTimeout","f","autoBom","Blob","type","open","i","saveAs","module","PendingApprovalList","useState","pending","setPrTypePending","approve","setPrTypeApprove","reject","setPrTypeReject","allPR","setAllPR","isView","setIsView","userName","setUserName","history","useHistory","useEffect","fetchGroupDetails","authData","JSON","parse","localStorage","getItem","axios","get","params","UsersID","UserName","MenuID","checkAuthentication","data","length","UserView","all","then","spread","approvalLevel","totalPendingCount","totalApproveCount","totalRejectCount","forEach","element","getUserGroup","UserGroup","ApproveStatus","getPending","Count","getApprove","getReject","getApprovalLevelPR","catch","error","boxStyle","flex","margin","padding","border","borderRadius","boxColors","CreateDateTime","dateTime","year","getFullYear","month","getMonth","toString","padStart","date","getDate","hours","getHours","minutes","getMinutes","formattedDateTime","log","style","display","className","backgroundColor","onClick","e","color","fontSize","fontWeight","width","showBorders","hoverStateEnabled","dataSource","onExporting","Date","workbook","Workbook","worksheet","addWorksheet","exportDataGrid","component","customizeCell","options","excelCell","font","size","alignment","horizontal","xlsx","writeBuffer","buffer","onCellDblClick","dataToPass","push","pathname","state","isPD","rowIndex","columnAutoWidth","allowColumnResizing","enabled","visible","dataField","caption","dataType"],"mappings":"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","file":"static/js/51.ba50d560.chunk.js","sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport DataGrid, {\r\n  Column,\r\n  Export,\r\n  Selection,\r\n  GroupPanel,\r\n  Grouping,\r\n  SearchPanel,\r\n} from \"devextreme-react/data-grid\";\r\nimport { Workbook } from \"exceljs\";\r\nimport saveAs from \"file-saver\";\r\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Prev } from \"react-bootstrap/esm/PageItem\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PendingApprovalList = () => {\r\n  const [pending, setPrTypePending] = useState([]);\r\n  const [approve, setPrTypeApprove] = useState([]);\r\n  const [reject, setPrTypeReject] = useState([]);\r\n  const [allPR, setAllPR] = useState([]);\r\n  const [isView, setIsView] = useState(true);\r\n  const [userName, setUserName] = useState({});\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    fetchGroupDetails();\r\n  }, []);\r\n  const fetchGroupDetails = async () => {\r\n    const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const checkAuthentication = await axios.get(\r\n      \"/api/CheckUserAuthentication\",\r\n      {\r\n        params: { UsersID: authData.UserName, MenuID: 1106 },\r\n      }\r\n    );\r\n    setUserName(authData.UserName);\r\n    if (checkAuthentication.data.length != 0) {\r\n      if (checkAuthentication.data[0].UserView) {\r\n        setIsView(false);\r\n        try {\r\n          axios\r\n            .all([\r\n              axios.get(\"/api/getApprovalLevelDocuments\", {\r\n                params: { UserName: authData.UserName },\r\n              }),\r\n            ])\r\n            .then(\r\n              axios.spread(async (approvalLevel) => {\r\n                let totalPendingCount = 0;\r\n                let totalApproveCount = 0;\r\n                let totalRejectCount = 0;\r\n                let array = [];\r\n                approvalLevel.data.forEach(async (element) => {\r\n                  const getUserGroup = await axios.get(\"/api/getUserGroup\", {\r\n                    params: { UserName: authData.UserName },\r\n                  });\r\n                  if (getUserGroup.data.length != 0) {\r\n                    const getPending = await axios.get(\r\n                      \"/api/getPendindPRPending\",\r\n                      {\r\n                        params: {\r\n                          UserGroup: getUserGroup.data[0].UserGroup,\r\n                          ApproveStatus: 0,\r\n                        },\r\n                      }\r\n                    );\r\n                    totalPendingCount += getPending.data[0].Count;\r\n                    setPrTypePending(totalPendingCount);\r\n                    const getApprove = await axios.get(\r\n                      \"/api/getPendindPRApprove\",\r\n                      {\r\n                        params: {\r\n                          UserGroup: getUserGroup.data[0].UserGroup,\r\n                          ApproveStatus: 2,\r\n                        },\r\n                      }\r\n                    );\r\n                    totalApproveCount += getApprove.data[0].Count;\r\n                    setPrTypeApprove(totalApproveCount);\r\n                    const getReject = await axios.get(\r\n                      \"/api/getPendindPRReject\",\r\n                      {\r\n                        params: {\r\n                          UserGroup: getUserGroup.data[0].UserGroup,\r\n                          ApproveStatus: 3,\r\n                        },\r\n                      }\r\n                    );\r\n                    totalRejectCount += getReject.data[0].Count;\r\n                    setPrTypeReject(totalRejectCount);\r\n                  }\r\n                  // const getApprovalLevelPR = await axios.get(\r\n                  //   \"/api/getApprovalLevelPR\",\r\n                  //   {\r\n                  //     params: { ApprovalLevel: element.ApprovalLevel },\r\n                  //   }\r\n                  // );\r\n                  // console.log(\"getApprovalLevelPR\", getApprovalLevelPR.data.length);\r\n                  // if (getApprovalLevelPR.data.length !== 0) {\r\n                  //   // array = [...array]; getApprovalLevelPR.data.length !== 0\r\n                  //   array.push(getApprovalLevelPR.data);\r\n                  //   // array[0] = getApprovalLevelPR.data;\r\n                  //   console.log(\"awa\", getApprovalLevelPR.data);\r\n                  // }\r\n                  // console.log(\"array\", array);\r\n                  // setAllPR(array[0]);\r\n                });\r\n                const getApprovalLevelPR = await axios.get(\r\n                  \"/api/getRequisitionItemList\",\r\n                  {\r\n                    params: { UserName: userName },\r\n                  }\r\n                );\r\n                if (getApprovalLevelPR.data.length !== 0) {\r\n                  setAllPR(getApprovalLevelPR.data);\r\n                }\r\n\r\n                // flattenArray(array)\r\n              })\r\n            )\r\n            .catch((error) => console.error(error));\r\n        } catch (error) {\r\n          // console.error(\"Error fetching details:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const gridStyle = {\r\n    backgroundColor: \"lightblue\",\r\n    padding: \"20px\",\r\n    marginBottom: \"20px\",\r\n  };\r\n\r\n  const containerStyle = {\r\n    display: \"flex\",\r\n    border: \"2px solid black\",\r\n  };\r\n\r\n  const boxStyle = {\r\n    flex: 1,\r\n    margin: \"15px\",\r\n    padding: \"40px\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: \"10px\",\r\n    // backgroundColor: \"yellow\",\r\n  };\r\n\r\n  const boxColors = [\"#00b300\", \"#cca300\", \"#F15854\"];\r\n\r\n  const onExporting = async (e) => {\r\n    let date = await CreateDateTime(new Date());\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Main sheet\");\r\n    exportDataGrid({\r\n      component: e.component,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        options.excelCell.font = { name: \"Arial\", size: 12 };\r\n        options.excelCell.alignment = { horizontal: \"left\" };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer) {\r\n        saveAs(\r\n          new Blob([buffer], { type: \"application/octet-stream\" }),\r\n          \"Pending Approval List \" + date + \".xlsx\"\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  const CreateDateTime = (dateTime) => {\r\n    const year = dateTime.getFullYear();\r\n    const month = (dateTime.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const date = dateTime.getDate().toString().padStart(2, \"0\");\r\n    const hours = dateTime.getHours().toString().padStart(2, \"0\");\r\n    const minutes = dateTime.getMinutes().toString().padStart(2, \"0\");\r\n    const formattedDateTime = `${year}.${month}.${date}.${hours}:${minutes}`;\r\n    console.log(formattedDateTime);\r\n    return formattedDateTime;\r\n  };\r\n\r\n  const updatePRTable = async (e) => {\r\n    const dataToPass = e.data;\r\n    history.push({\r\n      pathname: \"/forms/Purchase-Request/Purchase-Request\",\r\n      state: { data: dataToPass, isPD: true, rowIndex: e.data.rowIndex },\r\n    });\r\n  };\r\n  const ApproveClick = async (e) => {\r\n    if (!isView) {\r\n      const authData = await JSON.parse(localStorage.getItem(\"user\"));\r\n      const getUserGroup = await axios.get(\"/api/getUserGroup\", {\r\n        params: { UserName: authData.UserName },\r\n      });\r\n      if (getUserGroup.data.length != 0) {\r\n        const getApprovalLevelPR = await axios.get(\r\n          \"/api/getAllRequisitionItemList\",\r\n          {\r\n            params: {\r\n              UserGroup: getUserGroup.data[0].UserGroup,\r\n              ApproveStatus: 2,\r\n            },\r\n          }\r\n        );\r\n        if (getApprovalLevelPR.data.length !== 0) {\r\n          setAllPR(getApprovalLevelPR.data);\r\n        } else {\r\n          setAllPR(null);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const RejectClick = async (e) => {\r\n    if (!isView) {\r\n      const authData = await JSON.parse(localStorage.getItem(\"user\"));\r\n      const getUserGroup = await axios.get(\"/api/getUserGroup\", {\r\n        params: { UserName: authData.UserName },\r\n      });\r\n      if (getUserGroup.data.length != 0) {\r\n        const getApprovalLevelPR = await axios.get(\r\n          \"/api/getAllRequisitionItemList\",\r\n          {\r\n            params: {\r\n              UserGroup: getUserGroup.data[0].UserGroup,\r\n              ApproveStatus: 3,\r\n            },\r\n          }\r\n        );\r\n        if (getApprovalLevelPR.data.length !== 0) {\r\n          setAllPR(getApprovalLevelPR.data);\r\n        } else {\r\n          setAllPR(null);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const pendingClick = async (e) => {\r\n    if (!isView) {\r\n      const authData = await JSON.parse(localStorage.getItem(\"user\"));\r\n      const getUserGroup = await axios.get(\"/api/getUserGroup\", {\r\n        params: { UserName: authData.UserName },\r\n      });\r\n      if (getUserGroup.data.length != 0) {\r\n        const getApprovalLevelPR = await axios.get(\r\n          \"/api/getAllRequisitionItemList\",\r\n          {\r\n            params: {\r\n              UserGroup: getUserGroup.data[0].UserGroup,\r\n              ApproveStatus: 0,\r\n            },\r\n          }\r\n        );\r\n        if (getApprovalLevelPR.data.length !== 0) {\r\n          setAllPR(getApprovalLevelPR.data);\r\n        } else {\r\n          setAllPR(null);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={containerStyle} className=\"container\">\r\n        {/* Box 1 */}\r\n        <div\r\n          style={{ ...boxStyle, backgroundColor: boxColors[0] }}\r\n          className=\"box\"\r\n          onClick={ApproveClick}\r\n        >\r\n          <p style={{ color: \"white\", fontSize: \"56px\", fontWeight: \"bold\" }}>\r\n            {approve}\r\n          </p>\r\n          <p style={{ color: \"white\", fontSize: \"24px\" }}>Already Approved</p>\r\n        </div>\r\n\r\n        {/* Box 2 */}\r\n        <div\r\n          style={{ ...boxStyle, backgroundColor: boxColors[1] }}\r\n          className=\"box\"\r\n          onClick={pendingClick}\r\n        >\r\n          <p style={{ color: \"white\", fontSize: \"56px\", fontWeight: \"bold\" }}>\r\n            {pending}\r\n          </p>\r\n          <p style={{ color: \"white\", fontSize: \"24px\" }}>To be Approved</p>\r\n        </div>\r\n\r\n        {/* Box 3 */}\r\n        <div\r\n          style={{ ...boxStyle, backgroundColor: boxColors[2] }}\r\n          className=\"box\"\r\n          onClick={RejectClick}\r\n        >\r\n          <p style={{ color: \"white\", fontSize: \"56px\", fontWeight: \"bold\" }}>\r\n            {reject}\r\n          </p>\r\n          <p style={{ color: \"white\", fontSize: \"24px\" }}>Rejected</p>\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n      <div>\r\n        <DataGrid\r\n          width=\"100%\"\r\n          showBorders={true}\r\n          hoverStateEnabled={true}\r\n          dataSource={allPR}\r\n          onExporting={onExporting}\r\n          onCellDblClick={updatePRTable}\r\n          columnAutoWidth={true}\r\n          allowColumnResizing={true}\r\n        >\r\n          <Export enabled={true} />\r\n          <SearchPanel visible={true} />\r\n          <Export enabled={true} />\r\n          <Column dataField=\"PR_Number\" caption=\"PR Number\" />\r\n          <Column dataField=\"PR_Type\" caption=\"PR Type\" />\r\n          <Column dataField=\"CreateDate\" dataType=\"date\" width={100} />\r\n          <Column dataField=\"PR_ID\" visible={false} />\r\n          <Column dataField=\"Item_Type\" caption=\"Item Type\" />\r\n          {/* <Column dataField=\"TotalAmount\" /> */}\r\n          <Column dataField=\"ApprovalLevel\" />\r\n          <Column dataField=\"UserGroup\" />\r\n          {/* <Column dataField=\"Select\" /> */}\r\n\r\n          {/* <Export enabled={true} allowExportSelectedData={true} /> */}\r\n        </DataGrid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PendingApprovalList;\r\n"],"sourceRoot":""}