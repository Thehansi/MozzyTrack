{"version":3,"sources":["../node_modules/file-saver-es/src/FileSaver.js","Forms/Inquiry/PendingDocuments.jsx"],"names":["_global","window","self","global","download","url","name","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","isMacOSWebView","navigator","test","userAgent","HTMLAnchorElement","prototype","blob","URL","webkitURL","a","createElement","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","autoBom","warn","type","Blob","String","fromCharCode","bom","popup","title","body","innerText","force","isSafari","HTMLElement","safari","isChromeIOS","FileReader","reader","onloadend","result","replace","readAsDataURL","PendingDocuments","useEffect","fetchGroupDetails","useState","pr","SetPR","index","SetIndex","approvalLevel","SeAapprovalLevel","setIsView","history","useHistory","authData","JSON","parse","localStorage","getItem","axios","get","params","UsersID","UserName","MenuID","checkAuthentication","data","length","UserView","all","then","spread","UserGroup","level","EnterUser","allPR","log","dataArray","forEach","obj","Approved","Rejected","Cancel","Pending","Hold","parseInt","ApproveStatus","ApproveLevel","catch","onSaveValidation","undefined","message","notify","displayTime","position","at","offset","sapPost","PRHeaderID","PurchaseRequisitionHeader","PurchaseRequisitionItems","post","res","reload","CreateDateTime","dateTime","year","getFullYear","month","getMonth","toString","padStart","date","getDate","hours","getHours","minutes","getMinutes","formattedDateTime","customCheckboxStyles","applyCustomStyles","element","checkboxIcon","querySelector","checkedIcon","style","border","backgroundColor","borderColor","dataSource","showBorders","allowColumnResizing","wordWrapEnabled","hoverStateEnabled","columnAutoWidth","onCellDblClick","dataToPass","push","pathname","state","isPD","rowIndex","onCellClick","onSaved","ApproveRemarks","Swal","fire","icon","text","IsFinal","confirmButtonColor","confirmButtonText","onExporting","Date","workbook","Workbook","worksheet","addWorksheet","exportDataGrid","component","customizeCell","options","excelCell","font","size","alignment","horizontal","xlsx","writeBuffer","buffer","mode","allowUpdating","useIcons","enabled","buttons","dataField","caption","editorOptions","readOnly","valueExpr","displayExpr","dataType","onValueChanged","value","arrayPurchas","onContentReady"],"mappings":"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","file":"static/js/52.6b584267.chunk.js","sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nexport { saveAs }\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport { Button, Navbar, Tabs } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport DataGrid, {\r\n  Column,\r\n  Export,\r\n  Selection,\r\n  GroupPanel,\r\n  Grouping,\r\n  Paging,\r\n  Editing,\r\n  Item,\r\n  Lookup,\r\n} from \"devextreme-react/data-grid\";\r\nimport { Workbook } from \"exceljs\";\r\nimport { saveAs } from \"file-saver-es\";\r\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PendingDocuments = () => {\r\n  useEffect(() => {\r\n    fetchGroupDetails();\r\n  }, []);\r\n\r\n  const [pr, SetPR] = useState([]);\r\n  const [index, SetIndex] = useState(0);\r\n  const [approvalLevel, SeAapprovalLevel] = useState([]);\r\n  const [isView, setIsView] = useState(true);\r\n  const history = useHistory();\r\n  const fetchGroupDetails = async () => {\r\n    // debugger;\r\n    const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const checkAuthentication = await axios.get(\r\n      \"/api/CheckUserAuthentication\",\r\n      {\r\n        params: { UsersID: authData.UserName, MenuID: 1103 },\r\n      }\r\n    );\r\n    if (checkAuthentication.data.length != 0) {\r\n      if (checkAuthentication.data[0].UserView) {\r\n        setIsView(false);\r\n\r\n        try {\r\n          axios\r\n            .all([\r\n              axios.get(\"/api/getUserGroup\", {\r\n                params: { UserName: authData.UserName },\r\n              }),\r\n              axios.get(\"/api/getUserGroupAprrovalLevel\", {\r\n                params: { UserName: authData.UserName },\r\n              }),\r\n            ])\r\n            .then(\r\n              axios.spread(async (UserGroup, level) => {\r\n                if (UserGroup.data.length != 0) {\r\n                  const allPR = await axios.get(\r\n                    \"/api/getAllRequisitionItemList\",\r\n                    {\r\n                      //getAllRequisitionItemList getAllPRDetails\r\n                      params: {\r\n                        EnterUser: authData.UserName,\r\n                        UserGroup: UserGroup.data[0].UserGroup,\r\n                      },\r\n                    }\r\n                  );\r\n                  console.log(\"allPR\", allPR);\r\n                  const approvalLevel = await axios.get(\r\n                    \"/api/getUserGroupAprrovalLevel\",\r\n                    { params: { UserGroup: UserGroup.data[0].UserGroup } }\r\n                  );\r\n                  SeAapprovalLevel(approvalLevel.data);\r\n                  let dataArray = allPR.data;\r\n                  dataArray.forEach((obj) => {\r\n                    obj.Approved = false;\r\n                    obj.Rejected = false;\r\n                    obj.Cancel = false;\r\n                    obj.Pending = false;\r\n                    obj.Hold = false;\r\n                  });\r\n\r\n                  dataArray.forEach((obj) => {\r\n                    switch (parseInt(obj.ApproveStatus)) {\r\n                      case 0:\r\n                        obj.Pending = true;\r\n                        break;\r\n                      case 1:\r\n                        obj.Cancel = true;\r\n                        obj.ApproveLevel = null;\r\n                        break;\r\n                      case 2:\r\n                        obj.Approved = true;\r\n                        obj.ApproveLevel = null;\r\n                        break;\r\n                      case 3:\r\n                        obj.Rejected = true;\r\n                        obj.ApproveLevel = null;\r\n                        break;\r\n                      case 4:\r\n                        obj.Hold = true;\r\n                        break;\r\n                      default:\r\n                        break;\r\n                    }\r\n                  });\r\n                  SetPR(dataArray);\r\n                }\r\n              })\r\n            )\r\n            .catch((error) => console.error(error));\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // const [selectedValue, setSelectedValue] = useState({\r\n  //   GroupTable: {},\r\n  // });\r\n\r\n  const boldBorderStyle = {\r\n    border: \"2px solid #000\",\r\n  };\r\n\r\n  const redHeaderStyle = {\r\n    color: \"red\",\r\n  };\r\n\r\n  // const customHeaderCellRender = (props) => {\r\n  //   return (\r\n  //     <th\r\n  //       style={props.column.caption === \"Column Name\" ? redHeaderStyle : null}\r\n  //     >\r\n  //       {props.column.caption}\r\n  //     </th>\r\n  //   );\r\n  // };\r\n\r\n  // const gridStyle = {\r\n  //   backgroundColor: \"lightblue\",\r\n  //   padding: \"20px\",\r\n  //   marginBottom: \"20px\",\r\n  // };\r\n\r\n  // const cellPrepared = (e) => {\r\n  //   if (e.rowType === \"data\") {\r\n  //     // if (e.column.dataField === \"Approved\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // } else if (e.column.dataField === \"Rejected\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // } else if (e.column.dataField === \"Review\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // } else if (e.column.dataField === \"Pending\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // } else if (e.column.dataField === \"Hold\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // }\r\n  //     //  else if (e.column.dataField === \"Remarks\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // } else if (e.column.dataField === \"Date\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // } else if (e.column.dataField === \"User\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // } else if (e.column.dataField === \"Select\") {\r\n  //     //   e.cellElement.style.cssText = \"color: black; background-color: #F7E9BB\";\r\n  //     // }\r\n  //   }\r\n  // };\r\n\r\n  // const handleRadioChange = (value, key) => {\r\n  //   setSelectedValue(value);\r\n  //   console.log(\"Selected value:\", value);\r\n  //   console.log(\"Row key:\", key);\r\n  // };\r\n\r\n  const updatePRTable = async (e) => {\r\n    const dataToPass = e.data;\r\n    history.push({\r\n      pathname: \"/forms/Purchase-Request/Purchase-Request\",\r\n      state: { data: dataToPass, isPD: true, rowIndex: e.data.rowIndex },\r\n    });\r\n    // window.open(`/forms/Purchase-Request/Purchase-Request`, \"_self\");\r\n  };\r\n  // const getEditorOptions = (rowData) => {\r\n  //   console.log(\"rowData\", rowData.data);\r\n  //   return {\r\n  //     readOnly: rowData.data.ApproveLevelReadOnly,\r\n  //   };\r\n  // };\r\n  const changeApprove = (e) => {\r\n    console.log(e);\r\n    console.log(index);\r\n    if (e.value == true) {\r\n      let arrayPurchas = [...pr];\r\n      arrayPurchas[index].Pending = false;\r\n      arrayPurchas[index].Cancel = false;\r\n      arrayPurchas[index].Rejected = false;\r\n      arrayPurchas[index].Hold = false;\r\n      arrayPurchas[index].Approved = true;\r\n\r\n      SetPR(arrayPurchas);\r\n    }\r\n  };\r\n  const changePending = (e) => {\r\n    if (e.value == true) {\r\n      let arrayPurchas = [...pr];\r\n      arrayPurchas[index].Pending = true;\r\n      arrayPurchas[index].Cancel = false;\r\n      arrayPurchas[index].Rejected = false;\r\n      arrayPurchas[index].Hold = false;\r\n      arrayPurchas[index].Approved = false;\r\n\r\n      SetPR(arrayPurchas);\r\n    }\r\n  };\r\n  const changeCansel = (e) => {\r\n    if (e.value == true) {\r\n      let arrayPurchas = [...pr];\r\n      arrayPurchas[index].Pending = false;\r\n      arrayPurchas[index].Cancel = true;\r\n      arrayPurchas[index].Rejected = false;\r\n      arrayPurchas[index].Hold = false;\r\n      arrayPurchas[index].Approved = false;\r\n\r\n      SetPR(arrayPurchas);\r\n    }\r\n  };\r\n  const changeReject = (e) => {\r\n    if (e.value == true) {\r\n      let arrayPurchas = [...pr];\r\n      arrayPurchas[index].Pending = false;\r\n      arrayPurchas[index].Cancel = false;\r\n      arrayPurchas[index].Rejected = true;\r\n      arrayPurchas[index].Hold = false;\r\n      arrayPurchas[index].Approved = false;\r\n\r\n      SetPR(arrayPurchas);\r\n    }\r\n  };\r\n  const changeHold = (e) => {\r\n    if (e.value == true) {\r\n      let arrayPurchas = [...pr];\r\n      arrayPurchas[index].Pending = false;\r\n      arrayPurchas[index].Cancel = false;\r\n      arrayPurchas[index].Rejected = false;\r\n      arrayPurchas[index].Hold = true;\r\n      arrayPurchas[index].Approved = false;\r\n\r\n      SetPR(arrayPurchas);\r\n    }\r\n  };\r\n  const getIndex = (e) => {\r\n    console.log(e.rowIndex);\r\n    SetIndex(e.rowIndex);\r\n  };\r\n\r\n  const OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  const onSaveValidation = () => {\r\n    console.log(\"index\", pr[index]);\r\n    if (pr[index].ApproveLevel == \"\" || pr[index].ApproveLevel == undefined) {\r\n      OnNotification(\"Approval Level is Required\", \"error\");\r\n      return false;\r\n    }\r\n    return true;\r\n    // else if (\r\n    //   pr[index].PR_ID == \"\" ||\r\n    //   pr[index].PR_ID == NaN ||\r\n    //   pr[index].PR_ID == undefined\r\n    // ) {\r\n    //   OnNotification(\"Item Type is Required\", \"error\");\r\n    //   return false;\r\n    // }\r\n  };\r\n\r\n  const onClickSave = (e) => {\r\n    if (onSaveValidation()) {\r\n      let ApproveStatus;\r\n      if (pr[index].Approved) {\r\n        ApproveStatus = 2;\r\n      } else if (pr[index].Cancel) {\r\n        ApproveStatus = 1;\r\n      } else if (pr[index].Hold) {\r\n        ApproveStatus = 4;\r\n      } else if (pr[index].Pending) {\r\n        ApproveStatus = 0;\r\n      } else if (pr[index].Rejected) {\r\n        ApproveStatus = 3;\r\n      }\r\n      console.log(\"IsFinal\", pr[index]);\r\n      console.log(\"ApproveStatus\", ApproveStatus);\r\n      axios\r\n        .post(\"/api/updateApproval\", {\r\n          ApproveStatus: ApproveStatus,\r\n          ApproveLevel: pr[index].ApproveLevel,\r\n          ApproveRemarks: pr[index].ApproveRemarks,\r\n          PRHeaderID: pr[index].PRHeaderID,\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          const updateRequest = axios.post(\"/api/updateRequest\", {\r\n            ApproveStatus: ApproveStatus,\r\n            PRHeaderID: pr[index].PRHeaderID,\r\n          });\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: \"Success\",\r\n            text: \"Saved Successfully!\",\r\n          }).then(async (res) => {\r\n            if (pr[index].IsFinal) {\r\n              sapPost();\r\n            } else {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: '<span style=\"color: red;\">Error!</span>',\r\n            text: \"Failed to save document details\",\r\n            confirmButtonColor: \"#d33\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const sapPost = async () => {\r\n    const PurchaseRequisitionHeader = await axios.get(\r\n      \"/api/getPurchaseRequisitionHeader\",\r\n      {\r\n        params: { PRHeaderID: pr[index].PRHeaderID },\r\n      }\r\n    );\r\n\r\n    const PurchaseRequisitionItems = await axios.get(\r\n      \"/api/getPurchaseRequisitionItems\",\r\n      {\r\n        params: { PRHeaderID: pr[index].PRHeaderID },\r\n      }\r\n    );\r\n\r\n    axios\r\n      .post(\"/api/PurchesRequest-sync\", {\r\n        PurchaseRequisitionHeader: PurchaseRequisitionHeader.data[0],\r\n        PurchaseRequisitionItems: PurchaseRequisitionItems.data,\r\n      })\r\n      .then(async (res) => {\r\n        if (!res.data.error) {\r\n          window.location.reload();\r\n        } else {\r\n          console.error(\"Error:\", res.data.error);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const onExporting = async (e) => {\r\n    let date = await CreateDateTime(new Date());\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Main sheet\");\r\n    exportDataGrid({\r\n      component: e.component,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        options.excelCell.font = { name: \"Arial\", size: 12 };\r\n        options.excelCell.alignment = { horizontal: \"left\" };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer) {\r\n        saveAs(\r\n          new Blob([buffer], { type: \"application/octet-stream\" }),\r\n          \"Pending Documents \" + date + \".xlsx\"\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  const CreateDateTime = (dateTime) => {\r\n    const year = dateTime.getFullYear();\r\n    const month = (dateTime.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const date = dateTime.getDate().toString().padStart(2, \"0\");\r\n    const hours = dateTime.getHours().toString().padStart(2, \"0\");\r\n    const minutes = dateTime.getMinutes().toString().padStart(2, \"0\");\r\n    const formattedDateTime = `${year}.${month}.${date}.${hours}:${minutes}`;\r\n    console.log(formattedDateTime);\r\n    return formattedDateTime;\r\n  };\r\n\r\n  const customCheckboxStyles = {\r\n    border: \"2px solid #000000\",\r\n    backgroundColor: \"#ffffff\",\r\n    color: \"#ffffff\",\r\n  };\r\n  const applyCustomStyles = (element) => {\r\n    if (element) {\r\n      const checkboxIcon = element.querySelector(\".dx-checkbox-icon\");\r\n      const checkedIcon = element.querySelector(\r\n        \".dx-checkbox-checked .dx-checkbox-icon\"\r\n      );\r\n      if (checkboxIcon) {\r\n        checkboxIcon.style.border = customCheckboxStyles.border;\r\n      }\r\n      if (checkedIcon) {\r\n        checkedIcon.style.backgroundColor =\r\n          customCheckboxStyles.backgroundColor;\r\n        checkedIcon.style.borderColor = customCheckboxStyles.border;\r\n      }\r\n    }\r\n  };\r\n  // const onEditButtonClick = (e) => {\r\n  //   console.log(e);\r\n  // };\r\n  return (\r\n    <div>\r\n      <DataGrid\r\n        dataSource={pr}\r\n        showBorders={true}\r\n        allowColumnResizing={true}\r\n        wordWrapEnabled={true}\r\n        hoverStateEnabled={true}\r\n        // onCellPrepared={cellPrepared}\r\n        columnAutoWidth={true}\r\n        onCellDblClick={updatePRTable}\r\n        onCellClick={getIndex}\r\n        onSaved={onClickSave}\r\n        onExporting={onExporting}\r\n        // onEditingStart={onEditButtonClick}\r\n      >\r\n        <Editing mode=\"row\" allowUpdating={true} useIcons={true} />\r\n        <Export enabled={true} />\r\n        {/* <Column type=\"buttons\">\r\n          <Button name=\"edit\" onClick={onEditButtonClick} />\r\n        </Column> */}\r\n        <Column type=\"buttons\" buttons={[\"edit\"]} />\r\n        <Column\r\n          dataField=\"PRNumber\"\r\n          caption=\"PR Number\"\r\n          editorOptions={{ readOnly: true }}\r\n        />\r\n        <Column\r\n          dataField=\"ApproveLevel\"\r\n          caption=\"Current Approval Level\"\r\n          // editorOptions={{ readOnly: true }}\r\n        >\r\n          <Lookup\r\n            dataSource={approvalLevel}\r\n            valueExpr=\"ApprovalLevel\"\r\n            displayExpr=\"ApprovalLevel\"\r\n          />\r\n        </Column>\r\n        <Column dataField=\"CreatedDate\" dataType=\"date\" caption=\"Create Date\" />\r\n        {/* <Column\r\n          dataField=\"ValidFrom\"\r\n          editorType=\"dxDateBox\"\r\n          caption=\"Approve Date\"\r\n          format=\"dd/MM/yyyy\"\r\n          customizeText={(cellInfo) => {\r\n            const date = new Date(cellInfo.value);\r\n            const formattedDate = `${date.getDate()}/${\r\n              date.getMonth() + 1\r\n            }/${date.getFullYear()}`;\r\n            return formattedDate;\r\n          }}\r\n        /> */}\r\n        <Column\r\n          dataField=\"PRType\"\r\n          caption=\"PR Type\"\r\n          editorOptions={{ readOnly: true }}\r\n        />\r\n\r\n        <Column dataField=\"RequestorName\" editorOptions={{ readOnly: true }} />\r\n        <Column\r\n          dataField=\"ApproveUser\"\r\n          caption=\"Current Approved User\"\r\n          editorOptions={{ readOnly: true }}\r\n        />\r\n        {/* <Column\r\n          dataField=\"ValidTo\"\r\n          dataType=\"date\"\r\n          editorOptions={{ readOnly: true }}\r\n        />\r\n        <Column dataField=\"TotalAmount\" editorOptions={{ readOnly: true }} /> */}\r\n\r\n        {/* <Column\r\n          dataField=\"ApproveUser\"\r\n          caption=\"Current Approved User\"\r\n          editorOptions={{ readOnly: true }}\r\n        /> */}\r\n        <Column alignment=\"center\" caption=\"Approve Status\">\r\n          <Column\r\n            dataField=\"Approved\"\r\n            caption=\"Approved\"\r\n            editorOptions={{\r\n              onValueChanged: changeApprove,\r\n              onContentReady: (e) => applyCustomStyles(e.element),\r\n            }}\r\n          />\r\n          <Column\r\n            dataField=\"Rejected\"\r\n            caption=\"Rejected\"\r\n            editorOptions={{\r\n              onContentReady: (e) => applyCustomStyles(e.element),\r\n              onValueChanged: changeReject,\r\n            }}\r\n          />\r\n          <Column\r\n            dataField=\"Cancel\"\r\n            caption=\"Cancel\"\r\n            editorOptions={{\r\n              onContentReady: (e) => applyCustomStyles(e.element),\r\n              onValueChanged: changeCansel,\r\n            }}\r\n          />\r\n          <Column\r\n            dataField=\"Pending\"\r\n            caption=\"Pending\"\r\n            editorOptions={{\r\n              onContentReady: (e) => applyCustomStyles(e.element),\r\n              onValueChanged: changePending,\r\n            }}\r\n          />\r\n          <Column\r\n            dataField=\"Hold\"\r\n            caption=\"Hold\"\r\n            editorOptions={{\r\n              onContentReady: (e) => applyCustomStyles(e.element),\r\n              onValueChanged: changeHold,\r\n            }}\r\n          />\r\n        </Column>\r\n        <Column dataField=\"Remarks\" />\r\n      </DataGrid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PendingDocuments;\r\n"],"sourceRoot":""}