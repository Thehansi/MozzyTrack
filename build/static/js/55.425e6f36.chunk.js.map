{"version":3,"sources":["Forms/Admin/UserPermission.jsx"],"names":["UserPermission","useState","UserNames","setUserName","loginUser","setLoginUser","jUser","userNameUpdate","form","setform","permissions","LoadPanelVisible","state","setState","isAdd","setISAdd","setISEdit","setIsView","isSave","setIsSave","FormRef","useRef","current","instance","useEffect","fetchGroupDetails","authData","JSON","parse","localStorage","getItem","axios","get","params","UsersID","UserName","MenuID","checkAuthentication","data","length","UserView","userResponse","console","error","UserAdd","UserEdit","OnNotification","message","type","notify","displayTime","position","at","offset","ValidationItems","log","NaN","undefined","isFieldDisabled","field","activity","fields","some","condition","Activity","includes","handleCheckBoxChange","rowIndex","value","permisionData","renderCheckBox","isDisabled","changeIndex","changeFeild","onValueChanged","e","disabled","style","backgroundColor","color","ref","formData","caption","colCount","dataField","editorType","editorOptions","searchEnabled","dataSource","valueExpr","displayExpr","maxLength","username","permisionDetails","ActivityResponse","text","variant","onClick","updatedPermissions","map","permission","UserCancel","UserHold","id","allowColumnReordering","showBorders","wordWrapEnabled","hoverStateEnabled","enabled","readOnly","visible","cellRender","bg","userID","post","stringify","permissionHeader","UserID","response","Swal","fire","icon","title","then","res","confirmButtonColor","confirmButtonText"],"mappings":"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AOS,GAC7C,IAAIC,EAAgBzD,EAAMF,YAM1B,OALAgC,QAAQa,IAAI,gBAAiBc,GAC7B3B,QAAQa,IAAI,QAASa,GACrBC,EAAcF,GAAUR,GAASS,EACjC1B,QAAQa,IAAI,sBAAuBc,GACnCxD,EAAS,CAAEH,YAAa2D,IACjBA,GAGHC,GAAiB,SAAChC,EAAM6B,EAAUR,GACtC,IAAIY,GAAa,EACbC,EAAcL,EACdM,EAAcd,EAmNlB,OA/MmB,aAAjBrB,EAAK0B,UACK,WAATL,GAA+B,cAATA,GAAkC,YAATA,KAM/B,oBAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,oBAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,mBAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,8BAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,mBAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,WAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,sBAAjBrB,EAAK0B,UACK,cAATL,GAAkC,YAATA,KAMT,qBAAjBrB,EAAK0B,UACK,cAATL,GAAkC,YAATA,KAMT,0BAAjBrB,EAAK0B,UACK,cAATL,GAAkC,YAATA,KAMT,8BAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,mCAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,qCAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,qCAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAMe,qBAAjBrB,EAAK0B,UACK,WAATL,GAA+B,cAATA,GAAkC,YAATA,KAM/B,yBAAjBrB,EAAK0B,UACK,WAATL,GAA+B,cAATA,GAAkC,YAATA,KAM/B,OAAjBrB,EAAK0B,UACK,YAATL,GAAgC,cAATA,KAMP,UAAjBrB,EAAK0B,UACK,WAATL,GACU,YAATA,GACS,cAATA,GACS,YAATA,KAkBe,SAAjBrB,EAAK0B,UACK,cAATL,GAAkC,YAATA,KAMT,mBAAjBrB,EAAK0B,UACK,cAATL,GAAkC,YAATA,KAMT,kBAAjBrB,EAAK0B,UACK,cAATL,GAAkC,YAATA,KAMT,0BAAjBrB,EAAK0B,UACK,cAATL,GAAkC,YAATA,KAMT,kBAAjBrB,EAAK0B,UACK,WAATL,GAA+B,cAATA,GAAkC,YAATA,KArMhDa,GAAe,EACfC,EAAc,SACdF,GAAa,GA2Mb,kBAAC,IAAD,CACEH,MAAsB,GAAf9B,EAAKqB,GACZe,eAAgB,SAACC,GAAD,OAEVT,EAAqBC,EAAUR,GADnCY,GAE0CI,EAAEP,QAE9CQ,SAAUL,EACVM,OACmB,IAAjBL,GAAsC,WAAhBC,EAClB,CAAEK,gBAAiB,UAAWC,MAAO,SACrC,MAMZ,OACE,6BACE,kBAAC,IAAD,CAAMC,IAAK5D,EAAS6D,SAAUzE,EAAKF,OACjC,kBAAC,IAAD,CAAW4E,QAAQ,aAAaC,SAAU,GACxC,kBAAC,IAAD,CACEC,UAAU,WACVC,WAAW,cACXC,cAAe,CACbC,eAAe,EACfC,WAAYtF,EACZuF,UAAW,WACXC,YAAa,WACbC,UAAW,GACXjB,eAhac,8CAAG,WAAOkB,GAAP,iFACLnC,GAAlBmC,EAASxB,MADc,iCAEMrC,IAAMC,IACnC,gCACA,CACEC,OAAQ,CAAEC,QAAS0D,EAASxB,SALP,UAEnByB,EAFmB,OAQzBnD,QAAQa,IAAI,cAAesC,EAAiBvD,MAC5CnB,GAAU,KACN0E,EAAiBvD,KAAKC,OAAS,GAVV,iBAWvB1B,EAAS,CAAEH,YAAamF,EAAiBvD,OAXlB,yCAaQP,IAAMC,IACnC,qCAdqB,QAajB8D,EAbiB,OAiBvBjF,EAAS,CAAEH,YAAaoF,EAAiBxD,OAjBlB,6CAAH,yBAmahB,kBAAC,IAAD,CAAcS,QAAQ,mBACtB,kBAAC,IAAD,CAAOgD,KAAK,cAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,QAAQ,YAAYC,QA9RpB,WAChB,IAAMC,EAAqBtF,EAAMF,YAAYyF,KAAI,SAACC,GAChD,OAAO,2BACFA,GADL,IAEE5D,UAAU,EACVI,SAAUc,EAAgB0C,EAAY,YAElCA,EAAWxD,QACfC,UAAWa,EAAgB0C,EAAY,aAEnCA,EAAWvD,SACfwD,YAAa3C,EAAgB0C,EAAY,eAErCA,EAAWC,WACfC,UAAW5C,EAAgB0C,EAAY,aAEnCA,EAAWE,cAInBzF,EAAS,CAAEH,YAAawF,KA0QgCtB,SAAU1D,GAA1D,cAIA,kBAAC,IAAD,CAAQ8E,QAAQ,YAAYC,QApZrB,WACf,IAAMC,EAAqBtF,EAAMF,YAAYyF,KAAI,SAACC,GAAD,mBAAC,eAC7CA,GAD4C,IAE/C5D,UAAU,EACVI,SAAS,EACTC,UAAU,EACVwD,YAAY,EACZC,UAAU,OAGZzF,EAAS,CAAEH,YAAawF,KA0Y+BtB,SAAU1D,GAAzD,YAMN,kBAAC,IAAD,CACEqF,GAAG,WACHC,uBAAuB,EACvBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,EACnBnB,WAAY5E,EAAMF,aAKlB,kBAAC,IAAD,CAAQkG,SAAS,IAEjB,kBAAC,IAAD,CACExB,UAAU,WACVF,QAAQ,WACRI,cAAe,CAAEuB,UAAU,KAE7B,kBAAC,IAAD,CACEzB,UAAU,SACVF,QAAQ,UACR4B,SAAS,EACTxB,cAAe,CAAEuB,UAAU,KAE7B,kBAAC,IAAD,CACEzB,UAAU,WACVF,QAAQ,OACR6B,WAAY,gBAAGzE,EAAH,EAAGA,KAAM6B,EAAT,EAASA,SAAT,OACVG,GAAehC,EAAM6B,EAAU,eAGnC,kBAAC,IAAD,CACEiB,UAAU,UACVF,QAAQ,MACR6B,WAAY,gBAAGzE,EAAH,EAAGA,KAAM6B,EAAT,EAASA,SAAT,OACVG,GAAehC,EAAM6B,EAAU,cAMnC,kBAAC,IAAD,CACEiB,UAAU,WACVF,QAAQ,OACR6B,WAAY,gBAAGzE,EAAH,EAAGA,KAAM6B,EAAT,EAASA,SAAT,OACVG,GAAehC,EAAM6B,EAAU,eAMnC,kBAAC,IAAD,CACEiB,UAAU,aACVF,QAAQ,SACR6B,WAAY,gBAAGzE,EAAH,EAAGA,KAAM6B,EAAT,EAASA,SAAT,OACVG,GAAehC,EAAM6B,EAAU,iBAGnC,kBAAC,IAAD,CACEiB,UAAU,WACVF,QAAQ,OACR6B,WAAY,gBAAGzE,EAAH,EAAGA,KAAM6B,EAAT,EAASA,SAAT,OACVG,GAAehC,EAAM6B,EAAU,eAGnC,kBAAC,IAAD,CACEiB,UAAU,YACVF,QAAQ,QACRG,WAAW,aACXyB,SAAS,KAUb,kBAAC,IAAD,CAAQE,GAAG,QAAQhB,QAAQ,SACzB,kBAAC,IAAD,CAAQA,QAAQ,YAAYC,QA/iBlB,6CAAG,wGACP3C,IADO,0CAEX2D,EAASzG,EAAKF,MAAM6B,SAFT,kBAIUJ,IAAMmF,KAAK,qBAAsB,CACtDd,WAAYzE,KAAKwF,UAAUvG,EAAMF,aACjC0G,iBAAkBzF,KAAKwF,UAAU3G,EAAKF,OACtC4B,QAAS+E,EACTI,OAAQjH,IARG,OAIPkH,EAJO,OAUb5E,QAAQa,IAAI+D,EAAShF,MACrBiF,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,UACP3B,KAAM,gDACL4B,MAJH,8CAIQ,WAAOC,GAAP,gGAE2B7F,IAAMC,IACnC,qCAHE,OAEE8D,EAFF,OAKJjF,EAAS,CAAEH,YAAaoF,EAAiBxD,OACzC7B,EAAQ,CAAEH,MAAO,KANb,gDAQJoC,QAAQC,MAAM,SAAd,MACA4E,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,0CACP3B,KAAM,yCACN8B,mBAAoB,OACpBC,kBAAmB,OAdjB,0DAJR,yBAXa,kDAkCbpF,QAAQC,MAAM,SAAd,MACA4E,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,0CACP3B,KAAM,yCACN8B,mBAAoB,OACpBC,kBAAmB,OAxCR,2DAAH,uBA+iBuClD,SAAU9D,GAA3D","file":"static/js/55.425e6f36.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Form, {\r\n  Item,\r\n  RequiredRule,\r\n  Label,\r\n  GroupItem,\r\n} from \"devextreme-react/form\";\r\nimport DataGrid, {\r\n  Column,\r\n  Paging,\r\n  Editing,\r\n  Grouping,\r\n} from \"devextreme-react/data-grid\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport { CheckBox } from \"devextreme-react/check-box\";\r\n\r\nconst UserPermission = () => {\r\n  const [UserNames, setUserName] = useState({});\r\n  const [loginUser, setLoginUser] = useState({});\r\n  const [form, setform] = useState({\r\n    jUser: {\r\n      userNameUpdate: \"\",\r\n    },\r\n  });\r\n  const [state, setState] = useState({\r\n    permissions: [],\r\n    LoadPanelVisible: false,\r\n  });\r\n\r\n  const [isAdd, setISAdd] = useState(true);\r\n  const [isEdit, setISEdit] = useState(true);\r\n  const [isView, setIsView] = useState(true);\r\n  const [isSave, setIsSave] = useState(true);\r\n  // const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n  const FormRef = useRef(null);\r\n  const FormLayout = FormRef.current && FormRef.current.instance;\r\n\r\n  useEffect(() => {\r\n    fetchGroupDetails();\r\n  }, []);\r\n\r\n  const fetchGroupDetails = async () => {\r\n    const authData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const checkAuthentication = await axios.get(\r\n      \"/api/CheckUserAuthentication\",\r\n      {\r\n        params: { UsersID: authData.UserName, MenuID: 9003 },\r\n      }\r\n    );\r\n    setLoginUser(authData.UserName);\r\n    if (checkAuthentication.data.length != 0) {\r\n      if (checkAuthentication.data[0].UserView) {\r\n        setIsView(false);\r\n        try {\r\n          const userResponse = await axios.get(\r\n            \"/api/getallUserNameforPermission\"\r\n          );\r\n          setUserName(userResponse.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching details:\", error);\r\n        }\r\n      }\r\n\r\n      if (checkAuthentication.data[0].UserAdd) {\r\n        setISAdd(false);\r\n      }\r\n      if (checkAuthentication.data[0].UserEdit) {\r\n        setISEdit(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const customCheckboxStyles = {\r\n  //   border: \"2px solid #000000\",\r\n  //   backgroundColor: \"#ffffff\",\r\n  //   color: \"#ffffff\",\r\n  // };\r\n\r\n  // const applyCustomStyles = (element) => {\r\n  //   if (element) {\r\n  //     const checkboxIcon = element.querySelector(\".dx-checkbox-icon\");\r\n  //     const checkedIcon = element.querySelector(\r\n  //       \".dx-checkbox-checked .dx-checkbox-icon\"\r\n  //     );\r\n  //     if (checkboxIcon) {\r\n  //       checkboxIcon.style.border = customCheckboxStyles.border;\r\n  //     }\r\n  //     if (checkedIcon) {\r\n  //       checkedIcon.style.backgroundColor =\r\n  //         customCheckboxStyles.backgroundColor;\r\n  //       checkedIcon.style.borderColor = customCheckboxStyles.border;\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const onSelectionChanged = (e) => {\r\n  //   const selectedUser = e.selectedRowsData[0]?.UserName;\r\n  //   const updatedPermissions = state.permissions.map((item) => ({\r\n  //     ...item,\r\n  //     UserName: selectedUser,\r\n  //   }));\r\n  //   setState((prevState) => ({\r\n  //     ...prevState,\r\n  //     permissions: updatedPermissions,\r\n  //   }));\r\n  // };\r\n\r\n  const OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  const ValidationItems = async () => {\r\n    console.log(\"awa 2\");\r\n    if (\r\n      form.jUser.UserName == \"\" ||\r\n      form.jUser.UserName == NaN ||\r\n      form.jUser.UserName == undefined\r\n    ) {\r\n      OnNotification(\"User Name is Required\", \"error\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (await ValidationItems()) {\r\n      let userID = form.jUser.UserName;\r\n      try {\r\n        const response = await axios.post(\"/api/addPermission\", {\r\n          permission: JSON.stringify(state.permissions),\r\n          permissionHeader: JSON.stringify(form.jUser),\r\n          UsersID: userID,\r\n          UserID: loginUser,\r\n        });\r\n        console.log(response.data);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success\",\r\n          text: \"User Permission details saved successfully!\",\r\n        }).then(async (res) => {\r\n          try {\r\n            const ActivityResponse = await axios.get(\r\n              \"/api/userPermission_Activity_Load\"\r\n            );\r\n            setState({ permissions: ActivityResponse.data });\r\n            setform({ jUser: {} });\r\n          } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: '<span style=\"color: red;\">Error!</span>',\r\n              text: \"Failed to load User Permission details\",\r\n              confirmButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: '<span style=\"color: red;\">Error!</span>',\r\n          text: \"Failed to save User Permission details\",\r\n          confirmButtonColor: \"#d33\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getPermissionDetails = async (username) => {\r\n    if (username.value != undefined) {\r\n      const permisionDetails = await axios.get(\r\n        \"/api/getUserPermissionDetails\",\r\n        {\r\n          params: { UsersID: username.value },\r\n        }\r\n      );\r\n      console.log(\"permissions\", permisionDetails.data);\r\n      setIsSave(false);\r\n      if (permisionDetails.data.length > 0) {\r\n        setState({ permissions: permisionDetails.data });\r\n      } else {\r\n        const ActivityResponse = await axios.get(\r\n          \"/api/userPermission_Activity_Load\"\r\n        );\r\n\r\n        setState({ permissions: ActivityResponse.data });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const clearAll = () => {\r\n    const updatedPermissions = state.permissions.map((permission) => ({\r\n      ...permission,\r\n      UserView: false,\r\n      UserAdd: false,\r\n      UserEdit: false,\r\n      UserCancel: false,\r\n      UserHold: false,\r\n    }));\r\n\r\n    setState({ permissions: updatedPermissions });\r\n  };\r\n\r\n  const isFieldDisabled = (data, field) => {\r\n    const disabledConditions = [\r\n      {\r\n        activity: \"Dashboard\",\r\n        fields: [\"UserAdd\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Inventory Master\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Warehouse Master\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Supplier Master\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Inventory Warehouse Master\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Unit of Measure\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"PR Type\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Create User Branch\",\r\n        fields: [\"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Create User Group\",\r\n        fields: [\"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Create User Department\",\r\n        fields: [\"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Requisition List (Summery)\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Requisition List (Item Details)\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Requisition History Log (Summery)\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Requisition History Log (Details)\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Pending Documents\",\r\n        fields: [\"UserAdd\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Pending Approval List\",\r\n        fields: [\"UserAdd\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"KPI\",\r\n        fields: [\"UserHold\", \"UserCancel\"],\r\n      },\r\n      {\r\n        activity: \"Report\",\r\n        fields: [\"UserAdd\", \"UserEdit\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Users\",\r\n        fields: [\"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"User Permission\",\r\n        fields: [\"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Approval Level\",\r\n        fields: [\"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Approval Level Mapping\",\r\n        fields: [\"UserCancel\", \"UserHold\"],\r\n      },\r\n      {\r\n        activity: \"Password Reset\",\r\n        fields: [\"UserAdd\", \"UserCancel\", \"UserHold\"],\r\n      },\r\n    ];\r\n    return disabledConditions.some(\r\n      (condition) =>\r\n        condition.activity === data.Activity && condition.fields.includes(field)\r\n    );\r\n  };\r\n\r\n  const selectAll = () => {\r\n    const updatedPermissions = state.permissions.map((permission) => {\r\n      return {\r\n        ...permission,\r\n        UserView: true,\r\n        UserAdd: !isFieldDisabled(permission, \"UserAdd\")\r\n          ? true\r\n          : permission.UserAdd,\r\n        UserEdit: !isFieldDisabled(permission, \"UserEdit\")\r\n          ? true\r\n          : permission.UserEdit,\r\n        UserCancel: !isFieldDisabled(permission, \"UserCancel\")\r\n          ? true\r\n          : permission.UserCancel,\r\n        UserHold: !isFieldDisabled(permission, \"UserHold\")\r\n          ? true\r\n          : permission.UserHold,\r\n      };\r\n    });\r\n\r\n    setState({ permissions: updatedPermissions });\r\n  };\r\n\r\n\r\n  const handleCheckBoxChange = (rowIndex, field, value) => {\r\n    let permisionData = state.permissions;\r\n    console.log(\"permisionData\", permisionData);\r\n    console.log(\"value\", value);\r\n    permisionData[rowIndex][field] = value; //? 1 : 0\r\n    console.log(\"permisionData after\", permisionData);\r\n    setState({ permissions: permisionData });\r\n    return permisionData;\r\n  };\r\n\r\n  const renderCheckBox = (data, rowIndex, field) => {\r\n    let isDisabled = false;\r\n    let changeIndex = rowIndex;\r\n    let changeFeild = field;\r\n    // console.log(\"data\", data.Activity);\r\n    // console.log(\"field\", field);\r\n    if (\r\n      data.Activity == \"Dashboard\" &&\r\n      (field == \"UserAdd\" || field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Inventory Master\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Warehouse Master\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Supplier Master\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Inventory Warehouse Master\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Unit of Measure\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"PR Type\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Create User Branch\" &&\r\n      (field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Create User Group\" &&\r\n      (field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Create User Department\" &&\r\n      (field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Requisition List (Summery)\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Requisition List (Item Details)\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Requisition History Log (Summery)\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Requisition History Log (Details)\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Pending Documents\" &&\r\n      (field == \"UserAdd\" || field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Pending Approval List\" &&\r\n      (field == \"UserAdd\" || field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"KPI\" &&\r\n      (field == \"UserHold\" || field == \"UserCancel\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Report\" &&\r\n      (field == \"UserAdd\" ||\r\n        field == \"UserEdit\" ||\r\n        field == \"UserCancel\" ||\r\n        field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    }\r\n    // else if (\r\n    //   data.Activity == 17 &&\r\n    //   (field == \"UserAdd\" ||\r\n    //     field == \"UserEdit\" ||\r\n    //     field == \"UserCancel\" ||\r\n    //     field == \"UserHold\")\r\n    // ) {\r\n    //   changeIndex = -1;\r\n    //   changeFeild = \"CHANGE\";\r\n    //   isDisabled = true;\r\n    // }\r\n    else if (\r\n      data.Activity == \"Users\" &&\r\n      (field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"User Permission\" &&\r\n      (field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Approval Level\" &&\r\n      (field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Approval Level Mapping\" &&\r\n      (field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    } else if (\r\n      data.Activity == \"Password Reset\" &&\r\n      (field == \"UserAdd\" || field == \"UserCancel\" || field == \"UserHold\")\r\n    ) {\r\n      changeIndex = -1;\r\n      changeFeild = \"CHANGE\";\r\n      isDisabled = true;\r\n    }\r\n\r\n    return (\r\n      <CheckBox\r\n        value={data[field] == true}\r\n        onValueChanged={(e) =>\r\n          isDisabled\r\n            ? handleCheckBoxChange(rowIndex, field, false)\r\n            : handleCheckBoxChange(rowIndex, field, e.value)\r\n        }\r\n        disabled={isDisabled}\r\n        style={\r\n          changeIndex === -1 && changeFeild === \"CHANGE\"\r\n            ? { backgroundColor: \"#000000\", color: \"white\" }\r\n            : {}\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form ref={FormRef} formData={form.jUser}>\r\n        <GroupItem caption=\"Permission\" colCount={2}>\r\n          <Item\r\n            dataField=\"UserName\"\r\n            editorType=\"dxSelectBox\"\r\n            editorOptions={{\r\n              searchEnabled: true,\r\n              dataSource: UserNames,\r\n              valueExpr: \"UserName\",\r\n              displayExpr: \"UserName\",\r\n              maxLength: 50,\r\n              onValueChanged: getPermissionDetails,\r\n            }}\r\n          >\r\n            <RequiredRule message=\"Field required\" />\r\n            <Label text=\"Username\"></Label>\r\n          </Item>\r\n          <Item>\r\n            <Button variant=\"secondary\" onClick={selectAll} disabled={isSave}>\r\n              Select All\r\n            </Button>\r\n\r\n            <Button variant=\"secondary\" onClick={clearAll} disabled={isSave}>\r\n              Clear\r\n            </Button>\r\n          </Item>\r\n        </GroupItem>\r\n      </Form>\r\n      <DataGrid\r\n        id=\"Approval\"\r\n        allowColumnReordering={true}\r\n        showBorders={true}\r\n        wordWrapEnabled={true}\r\n        hoverStateEnabled={true}\r\n        dataSource={state.permissions}\r\n        // onEditorPreparing={onEditorPreparing}\r\n        // onRowPrepared={onRowPrepared}\r\n        // onCellPrepared={onCellPrepared}\r\n      >\r\n        <Paging enabled={false} />\r\n        {/* <Editing mode=\"row\" allowUpdating={true} useIcons={true} /> */}\r\n        <Column\r\n          dataField=\"Activity\"\r\n          caption=\"Activity\"\r\n          editorOptions={{ readOnly: true }}\r\n        />\r\n        <Column\r\n          dataField=\"MenuID\"\r\n          caption=\"Menu ID\"\r\n          visible={false}\r\n          editorOptions={{ readOnly: true }}\r\n        />\r\n        <Column\r\n          dataField=\"UserView\"\r\n          caption=\"View\"\r\n          cellRender={({ data, rowIndex }) =>\r\n            renderCheckBox(data, rowIndex, \"UserView\")\r\n          }\r\n        ></Column>\r\n        <Column\r\n          dataField=\"UserAdd\"\r\n          caption=\"Add\"\r\n          cellRender={({ data, rowIndex }) =>\r\n            renderCheckBox(data, rowIndex, \"UserAdd\")\r\n          }\r\n          // editorOptions={{\r\n          //   onContentReady: (e) => applyCustomStyles(e.element),\r\n          // }}\r\n        />\r\n        <Column\r\n          dataField=\"UserEdit\"\r\n          caption=\"Edit\"\r\n          cellRender={({ data, rowIndex }) =>\r\n            renderCheckBox(data, rowIndex, \"UserEdit\")\r\n          }\r\n          // editorOptions={{\r\n          //   onContentReady: (e) => applyCustomStyles(e.element),\r\n          // }}\r\n        />\r\n        <Column\r\n          dataField=\"UserCancel\"\r\n          caption=\"Cancel\"\r\n          cellRender={({ data, rowIndex }) =>\r\n            renderCheckBox(data, rowIndex, \"UserCancel\")\r\n          }\r\n        />\r\n        <Column\r\n          dataField=\"UserHold\"\r\n          caption=\"Hold\"\r\n          cellRender={({ data, rowIndex }) =>\r\n            renderCheckBox(data, rowIndex, \"UserHold\")\r\n          }\r\n        />\r\n        <Column\r\n          dataField=\"UserPrint\"\r\n          caption=\"Print\"\r\n          editorType=\"dxCheckBox\"\r\n          visible={false}\r\n        />\r\n        {/* <Column\r\n          type=\"buttons\"\r\n          buttons={[\"edit\"]}\r\n          caption=\"Actions\"\r\n          headerCellRender={() => <div>Actions</div>}\r\n        /> */}\r\n      </DataGrid>\r\n\r\n      <Navbar bg=\"light\" variant=\"light\">\r\n        <Button variant=\"secondary\" onClick={handleSave} disabled={isAdd}>\r\n          Save\r\n        </Button>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPermission;\r\n"],"sourceRoot":""}